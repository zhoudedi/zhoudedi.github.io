<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>点滴记忆</title>
  
  <subtitle>你知道的越多，你不知道的越多。</subtitle>
  <link href="https://blog.quickso.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.quickso.cn/"/>
  <updated>2021-06-29T07:52:10.051Z</updated>
  <id>https://blog.quickso.cn/</id>
  
  <author>
    <name>木子欢儿</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nexus9刷机全纪录</title>
    <link href="https://blog.quickso.cn/2021/06/29/Nexus9%E5%88%B7%E6%9C%BA%E5%85%A8%E7%BA%AA%E5%BD%95/"/>
    <id>https://blog.quickso.cn/2021/06/29/Nexus9%E5%88%B7%E6%9C%BA%E5%85%A8%E7%BA%AA%E5%BD%95/</id>
    <published>2021-06-29T06:35:05.000Z</published>
    <updated>2021-06-29T07:52:10.051Z</updated>
    
    <content type="html"><![CDATA[<p>最近从某海鲜市场花了200软妹币购买了Nexus9，2+32GB的，具体参数可以看<a href="https://product.pconline.com.cn/tabletpc/google/571146_detail.html">这里</a>，NVIDIA Tegra K1的CPU</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210629143729.png"></p><p>原系统是谷歌原生7.X，把玩了半天，发现卡的不能，所以还是刷个鸡吧！顺便记录一下</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="1-解锁BL锁"><a href="#1-解锁BL锁" class="headerlink" title="1.解锁BL锁"></a>1.解锁BL锁</h2><p><strong>下载安装Nexus Root Toolkit</strong></p><p>官方：</p><p><a href="https://androidfilehost.com/?fid=24728673521238129">NRT_v2.1.9.sfx.exe | by WugFresh for Generic Device/Other (androidfilehost.com)</a></p><p>我的网盘：</p><p><a href="https://huangenet.lanzoui.com/iDtZZqtet5i">NRT_v2.1.9.sfx.exe - 蓝奏云 (lanzoui.com)</a></p><p>一路next安装好后，按照图示数字开启刷机之旅……</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210629144612.png"></p><p>开发者选项，打开 OEM 锁，打开 USB 调试<br>点 unlock 解锁（好像也可以用命令 [adb fastboot flashing unlock / fastboot oem unlock]</p><p>装 adb 环境（好像装 nexus root toolkit 时会自动把 adb 也装上）</p><p>解锁好后 进入bootloader 会显示 unlocked</p><h2 id="2-安装第三方REC-twrp"><a href="#2-安装第三方REC-twrp" class="headerlink" title="2.安装第三方REC-twrp"></a>2.安装第三方REC-twrp</h2><p><strong>下载（下载最新版本即可）：</strong></p><p><a href="https://twrp.me/">TeamWin - TWRP</a></p><p><strong>拷贝twrp到指定目录</strong><br>以twrp-3.5.2_9-0-flounder.img为例，将twrp-3.5.2_9-0-flounder.img拷贝到Nexus Root Toolkit的默认安装目录下</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">C:<span class="hljs-string">\Program</span> Files (x86)<span class="hljs-string">\WugFresh</span> Development<span class="hljs-string">\Nexus</span> Root Toolkit<span class="hljs-string">\data</span><br></code></pre></td></tr></table></figure><p><strong>进入bootloader模式</strong><br>设备关机，*<strong>*同时按住电源键和音量键上（直到进入界面后方可松开）**</strong>，选择进入bootloader模式</p><p>当然你也可以用命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">adb reboot bootloade</span><br></code></pre></td></tr></table></figure><p><strong>刷入twrp</strong><br>在dos模式下进入C:\Program Files (x86)\WugFresh Development\Nexus Root Toolkit\data目录，输入如下命令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">fastboot</span> flash recovery twrp-<span class="hljs-number">3</span>.<span class="hljs-number">5</span>.<span class="hljs-number">2</span>_<span class="hljs-number">9</span>-<span class="hljs-number">0</span>-flounder.img<br></code></pre></td></tr></table></figure><p>之后</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">fastboot boot twrp-<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>-<span class="hljs-keyword">x</span>.img<br></code></pre></td></tr></table></figure><p>进入REC模式</p><p><strong>之后的操作都在 twrp 里进行</strong></p><h2 id="3-刷机"><a href="#3-刷机" class="headerlink" title="3.刷机"></a>3.刷机</h2><p>⑴<strong>备份</strong>（也可以忽略）</p><p>* 点 backup<br>* 命令 [adb pull xxx xxx] 保存到电脑里</p><p>（2）<strong>清除数据</strong>（三清）<br>点 wipe，全选<br>点 format data </p><p>还有一个滑动的那个也执行了</p><p>（3）<strong>刷机</strong></p><p>命令 [adb push xxx /sdcard/] 把需要装的包传进手机</p><p>①点 install，刷 [驱动] <a href="https://androidfilehost.com/?fid=817906626617936176">vendor-flounder-n9f27m.img</a>，在文件列表的右下角，点 install image 才会显示 img 后缀的文件</p><p>②点 install，刷 [系统] <a href="https://androidfilehost.com/?w=files&flid=149860&sort_by=date&sort_dir=DESC">Resurrection Remix Oreo for Nexus 9</a></p><p> ③点 install，刷 [内核]  <a href="https://elementalx.org/devices/nexus-9/">ElementalX-N9</a> （8.1.0的那个）</p><p>④点 install，刷 [gapps] <a href="https://opengapps.org/?arch=arm64&api=8.1&variant=nano">The Open GApps Project</a></p><p>⑤点 install，刷 [root] <a href="https://huangenet.lanzoui.com/ilj6Hqtgfij">root包</a></p><p><a href="https://huangenet.lanzoui.com/iB0lqqtisne">SuperSU-v2.82-nexus9</a></p><p>⑥刷机完成</p><h2 id="4-跳过激活"><a href="#4-跳过激活" class="headerlink" title="4.跳过激活"></a>4.<strong>跳过激活</strong></h2><p>原因你懂的，安装android原生系统后，无法在wifi环境下激活，因此强烈推荐手工修改系统文件跳过激活步骤</p><p>A、设备关机，同时按住电源键和音量键（直到进入界面后方可松开），进入bootloader状态</p><p>B、选择音量增减键进入recovery模式</p><p>C、选择界面中mount，勾选system分区并挂载</p><p>D、adb修改系统文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd C:\Program Files (x86)\WugFresh Development\Nexus Root Toolkit\data<br>adb shell<br>echo <span class="hljs-string">&quot;ro.setupwizard.mode=DISABLED&quot;</span> &gt;&gt; <span class="hljs-regexp">/system/</span>build.prop<br><span class="hljs-keyword">exit</span><br>adb reboot<br></code></pre></td></tr></table></figure><p>小伙伴终于可以愉快玩耍了</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210629151718.png"></p><p>平板应用推荐</p><p><a href="https://www.coolapk.com/album/28085545">https://www.coolapk.com/album/28085545</a></p><p>参考文档：</p><p><a href="https://blog.csdn.net/chj113/article/details/96460552">nexus9刷机全记录_chj113的专栏-CSDN博客_nexus9刷机</a></p><p><a href="https://tieba.baidu.com/p/5987428550">刷机 全过程 记录 LineageOS 14.1 Nexus 9 (Wi-Fi)【nexus9吧】_百度贴吧 (baidu.com)</a></p><p>[<a href="https://forum.xda-developers.com/t/rom-official-lineageos-14-1-for-nexus-9-flounder.3617907/">ROM][OFFICIAL] LineageOS 14.1 for Nexus 9 (flounder) | XDA Forums (xda-developers.com)</a></p><p>[<a href="https://www.cyanogenmods.org/forums/topic/resurrection-remix-oreo-for-nexus-9-android-8-1/">RR OREO] Nexus 9 Resurrection Remix OREO 8. 1 Download (cyanogenmods.org)</a></p><p>[<a href="https://forum.xda-developers.com/t/kernel-january-29-elementalx-n9-5-17-nougat-7-03-oreo.2931657/">KERNEL] [January 29] ElementalX-N9 5.17 (Nougat) 7.03 (Oreo) | XDA Forums (xda-developers.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近从某海鲜市场花了200软妹币购买了Nexus9，2+32GB的，具体参数可以看&lt;a href=&quot;https://product.pconline.com.cn/tabletpc/google/571146_detail.html&quot;&gt;这里&lt;/a&gt;，NVIDIA Tegra</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Nexus9" scheme="https://blog.quickso.cn/tags/Nexus9/"/>
    
  </entry>
  
  <entry>
    <title>树莓派自动化推流摄像头到Bilibili直播</title>
    <link href="https://blog.quickso.cn/2021/06/12/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8E%A8%E6%B5%81%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0Bilibili%E7%9B%B4%E6%92%AD/"/>
    <id>https://blog.quickso.cn/2021/06/12/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8E%A8%E6%B5%81%E6%91%84%E5%83%8F%E5%A4%B4%E5%88%B0Bilibili%E7%9B%B4%E6%92%AD/</id>
    <published>2021-06-12T01:33:28.000Z</published>
    <updated>2021-06-12T01:52:07.822Z</updated>
    
    <content type="html"><![CDATA[<p>树莓派/玩客云闲置怎么办？用来直播推流呀</p><p><a href="https://github.com/withsalt/BilibiliLiveTools">withsalt/BilibiliLiveTools: Bilibili直播工具</a></p><p>直播间演示：</p><p><a href="https://live.bilibili.com/21577989">https://live.bilibili.com/21577989</a></p><p><strong>准备工作</strong></p><p>（1）前提条件</p><p>a.首先要有一个树莓派，并连接了摄像头（USB摄像头）。并能够访问网络。<br>b.在Bilibili中通过实名认证，并开通了直播间。<a href="https://link.bilibili.com/p/center/index">点击连接</a>开通直播间（很简单的，实名认证通过后直接就可以开通了）<br>c.FFmpeg。推流默认使用FFmpeg，树莓派官方系统默认安装了的，我就不再赘述，其它系统请自行安装。</p><p>（2）获取程序</p><p>下载编译好的程序：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://github.com/withsalt/BilibiliLiveTools/releases/download/2.0.2/BilibiliLiver_Linux_ARM.zip<br></code></pre></td></tr></table></figure><p>（2）解压并授权</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">unzip BilibiliLiver_Linux_ARM.zip &amp;&amp; chmod -R 755 BilibiliLiver_Linux_ARM &amp;&amp; chmod +x BilibiliLiver_Linux_ARM/BilibiliLiver<br></code></pre></td></tr></table></figure><p>（3）编辑配置文件</p><p>编辑用户配置文件User.json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> BilibiliLiver_Linux_ARM/<br>nano appsettings.json<br></code></pre></td></tr></table></figure><p>编辑直播配置文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;AppSetting&quot;</span>: &#123;<br>    <span class="hljs-comment">//加密密钥，一般不需要修改，要修改的话，至少需要16位</span><br>    <span class="hljs-attr">&quot;Key&quot;</span>: <span class="hljs-string">&quot;ac131de1-ed20-499f-8fdf-dede054dbaad&quot;</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;LiveSetting&quot;</span>: &#123;<br>    <span class="hljs-comment">//直播间分类</span><br>    <span class="hljs-attr">&quot;LiveCategory&quot;</span>: <span class="hljs-string">&quot;369&quot;</span>,<br>    <span class="hljs-comment">//直播间名称</span><br>    <span class="hljs-attr">&quot;LiveRoomName&quot;</span>: <span class="hljs-string">&quot;【24H】小金鱼啦~&quot;</span>,<br>    <span class="hljs-comment">//FFmpeg推流命令，请自行填写对应操作系统和设备的推流命令，默认为树莓派，且摄像头设备为‘/dev/video0’</span><br>    <span class="hljs-comment">//填写到此处时，请注意将命令中‘&quot;’用‘\’进行转义，将推流的rtmp连接替换为[[URL]]，[[URL]]不需要双引号。</span><br>    <span class="hljs-attr">&quot;FFmpegCmd&quot;</span>: <span class="hljs-string">&quot;ffmpeg -f dshow -video_size 1280x720 -i video=\&quot;5M USB CAM\&quot; -vcodec libx264 -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 5000k -an -preset:v ultrafast -tune:v zerolatency -f flv [[URL]]&quot;</span>,<br>    <span class="hljs-comment">//ffmpeg异常退出后，是否自动重新启动</span><br>    <span class="hljs-attr">&quot;AutoRestart&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;UserSetting&quot;</span>: &#123;<br>    <span class="hljs-comment">//B站账号</span><br>    <span class="hljs-attr">&quot;Account&quot;</span>: <span class="hljs-string">&quot;*********&quot;</span>,<br>    <span class="hljs-comment">//B站密码，放心填写，没有后门</span><br>    <span class="hljs-attr">&quot;Password&quot;</span>: <span class="hljs-string">&quot;*********&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>由于推流方式不同以及FFmpeg配置的多边性，这里采用直接填写推流命令的方式。建议填写之前先测试推流命令能否正确执行。默认的推流命令设配树莓派官方系统，其它系统可能不适用，需要自己修改。</p><p>推流命令（FFmpegCmd）中的“[[URL]]”，是一个配置符号，将在程序中被替换为获取到的Bilibili推流地址，所以一定要在最终命令中，把测试文件或者地址修改为 “[[URL]]”（URL大写） ，否则程序将抛出错误。推流命令中注意半角双引号需要用符号‘\’来进行转义。</p><p>FFmpeg的使用请查看最后一节：FFmpeg的使用</p><p><strong>开始直播</strong></p><p>执行推流程序。推流程序将会自动开启B站直播，并获取推流地址，然后执行预设的FFmpeg推流命令。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo ./BilibiliLiver<br></code></pre></td></tr></table></figure><p>输出下面的就表示开始直播啦~</p><p><img src="https://www.quarkbook.com/wp-content/uploads/2019/09/image-12-1024x424.png" alt="树莓派自动化推流摄像头到Bilibili直播">开始直播输出</p><p>如果希望在后台持续直播，可以将上面一条命令替换为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo nohup ./BilibiliLiver /dev/null 2&gt;live.log<br></code></pre></td></tr></table></figure><p>程序将会在后台运行。</p><p>或者编写一个系统服务，设置开机启动，控制开始关闭推流什么的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo nano /etc/systemd/system/bilibiliLiver.service<br></code></pre></td></tr></table></figure><p>将下方代码中的执行路径替换为BilibiliLiver程序所在的<strong>绝对路径</strong>。比如“/home/pi/BilibiliLiver_Linux_ARM/BilibiliLiver”，注意大小写。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=BilibiliLiver<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">WorkingDirectory</span>=BilibiliLiver所在路径，比如/home/pi/BilibiliLiver_Linux_ARM<br><span class="hljs-attr">ExecStart</span>=BilibiliLiver所在路径包含程序的路径，比如/home/pi/BilibiliLiver_Linux_ARM/BilibiliLiver<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-attr">SyslogIdentifier</span>=BilibiliLiver Tool<br><span class="hljs-attr">User</span>=root<br><span class="hljs-attr">Environment</span>=ASPNETCORE_ENVIRONMENT=Production<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>执行start，开启推流服务。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl start bilibiliLiver<br></code></pre></td></tr></table></figure><p>检查命令是否配置正确已经程序是否正常工作。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl status bilibiliLiver<br></code></pre></td></tr></table></figure><p>其它服务维护命令。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl stop bilibiliLiver    <span class="hljs-comment">#停止推流服务</span><br>sudo systemctl <span class="hljs-built_in">enable</span> bilibiliLiver  <span class="hljs-comment">#设置开机启动</span><br>sudo systemctl <span class="hljs-built_in">disable</span> bilibiliLiver <span class="hljs-comment">#禁用开机启动</span><br></code></pre></td></tr></table></figure><p><strong>FFmpeg的使用</strong></p><p>无论是Windows还是Linux，运行环境无论是PC还是树莓派，如果使用FFmpeg推流，都要在上面安装好FFmpeg，并在命令行中执行ffmpeg -version后可以准确的获取ffmpeg的相关信息。</p><p><img src="https://www.quarkbook.com/wp-content/uploads/2019/10/image-5-1024x360.png" alt="树莓派自动化推流摄像头到Bilibili直播">ffmpeg命令行输出</p><p>至于如何在各种环境中安装ffmpeg我就不在此赘述，网上有很多详细的教程。树莓派官方系统是内置了ffmpeg的，不用自己再编译安装。</p><p>以下是树莓派Raspbian系统中推流命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#推流USB摄像头（包含音频，音频源为音频文件）</span><br>ffmpeg -thread_queue_size 512 -f video4linux2 -s 1280*720 -input_format mjpeg -i <span class="hljs-string">&quot;视频源&quot;</span> -stream_loop -1 -i <span class="hljs-string">&quot;音频源&quot;</span> -vcodec h264_omx -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 10M -bufsize 10M -acodec aac -ac 2 -ar 44100 -ab 128k -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流USB摄像头（包含音频，音频源麦克风）</span><br>ffmpeg -thread_queue_size 512 -f video4linux2 -s 1280*720 -input_format mjpeg -i <span class="hljs-string">&quot;视频源&quot;</span> -i <span class="hljs-string">&quot;音频源&quot;</span> -vcodec h264_omx -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 10M -bufsize 10M -acodec aac -ac 2 -ar 44100 -ab 128k -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流USB摄像头（不包含音频）</span><br>ffmpeg -thread_queue_size 512 -f video4linux2 -s 1280*720 -i <span class="hljs-string">&quot;视频源&quot;</span> -vcodec h264_omx -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 10M -bufsize 10M -an -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流视频</span><br>ffmpeg -re -i <span class="hljs-string">&quot;视频源&quot;</span> -vcodec copy -acodec aac -b:a 192k -f flv <span class="hljs-string">&quot;推流地址&quot;</span> <br></code></pre></td></tr></table></figure><p>以下是Windows系统中推流命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#推流USB摄像头（包含音频，音频源为音频文件）</span><br>ffmpeg -f dshow -s 1280*720 -r 1024 -i video=<span class="hljs-string">&quot;视频源&quot;</span> -stream_loop -1 -i <span class="hljs-string">&quot;音频源&quot;</span> -vcodec libx264 -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 5000k -acodec aac -ac 2 -ar 44100 -ab 128k -preset:v ultrafast -tune:v zerolatency -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流USB摄像头（包含音频，音频源麦克风）</span><br>ffmpeg -f dshow -s 1280*720 -r 1024 -i video=<span class="hljs-string">&quot;视频源&quot;</span> -i <span class="hljs-string">&quot;音频源&quot;</span> -vcodec libx264 -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 5000k -acodec aac -ac 2 -ar 44100 -ab 128k -preset:v ultrafast -tune:v zerolatency -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流USB摄像头（不包含音频）</span><br>ffmpeg -f dshow -s 1280*720 -r 1024 -i video=<span class="hljs-string">&quot;视频源&quot;</span> -vcodec libx264 -pix_fmt yuv420p -r 30 -s 1280*720 -g 60 -b:v 5000k -an -preset:v ultrafast -tune:v zerolatency -f flv <span class="hljs-string">&quot;推流地址&quot;</span><br><br><span class="hljs-comment">#推流视频</span><br>ffmpeg -re -i <span class="hljs-string">&quot;视频源&quot;</span> -vcodec copy -acodec aac -b:a 192k -f flv <span class="hljs-string">&quot;推流地址&quot;</span> <br></code></pre></td></tr></table></figure><p>以上命令没有经过仔细测试，不同环境需要不同的参数，请自行学习FFmpeg的用法。</p><p>FFmpeg基本用法：</p><p>ffmpeg [全局选项] {[输入文件选项] -i 输入文件} … {[输出文件选项] 输出文件} …</p><p>参数简单介绍：</p><ul><li>-f：输入格式（video4linux2 ）</li><li>-i：输入源</li><li>-s：视频分辨率</li><li>-r：所需的帧率</li><li>-vcodec：视频编解码器</li><li>-vb：视频比特率</li><li>-bufsize：缓冲区大小（对于流来说很重要）</li><li>-vf：像素格式</li><li>-g：GOP（图片组，对于流式传输很重要）</li><li>-an：不使用音频</li><li>-f：输出格式</li></ul><p><a href="https://huangenet.lanzoui.com/i7RjTq47fwj">ffmpeg翻译文档.pdf - 蓝奏云 (lanzoui.com)</a></p><p>树莓派在使用FFmpeg推流时，帧数大概在10帧左右，这个帧数并不理想，而且还在用树莓派硬件解码的情况下。但是也是目前我能找到的最优解了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;树莓派/玩客云闲置怎么办？用来直播推流呀&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/withsalt/BilibiliLiveTools&quot;&gt;withsalt/BilibiliLiveTools: Bilibili直播工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;直</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="玩客云" scheme="https://blog.quickso.cn/tags/%E7%8E%A9%E5%AE%A2%E4%BA%91/"/>
    
    <category term="树莓派" scheme="https://blog.quickso.cn/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    <category term="FFmpeg" scheme="https://blog.quickso.cn/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>在玩客云上部署code-server</title>
    <link href="https://blog.quickso.cn/2021/06/05/%E5%9C%A8%E7%8E%A9%E5%AE%A2%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2code-server/"/>
    <id>https://blog.quickso.cn/2021/06/05/%E5%9C%A8%E7%8E%A9%E5%AE%A2%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2code-server/</id>
    <published>2021-06-05T06:49:06.000Z</published>
    <updated>2021-06-05T07:06:04.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://coder.com/">Code-server</a> 是在远程服务器上运行的VS Code，通过浏览器访问。</p><ul><li>在你的Chromebook、平板、笔记本上用一样的环境来进行开发</li><li>如果你有Windows或Mac工作站，也可以轻松地在Linux上开发</li><li>利用云服务器来加快测试、编译、下载等操作</li><li>不论在哪永远在线</li><li>所有的计算都在云端进行</li><li>不需要再运行过多的Chrome实例</li></ul><p>Code-server → <a href="https://coder.com/">https://coder.com/</a></p><p>GitHub → <a href="https://github.com/linuxserver/docker-code-server">https://github.com/linuxserver/docker-code-server</a></p><p>Docker Hub → <a href="https://hub.docker.com/r/linuxserver/code-server">https://hub.docker.com/r/linuxserver/code-server</a></p><h2 id="支持的系统架构"><a href="#支持的系统架构" class="headerlink" title="支持的系统架构"></a>支持的系统架构</h2><p>得益于docker的跨平台属性，我们的镜像也支持多架构（如，x86-64、arm64、armhf）。</p><p>直接拉取 <code>ghcr.io/linuxserver/code-server</code> 应该就可以自动获取适合你系统架构的版本，当然你也可以通过 tag 获取特定的版本。</p><table><thead><tr><th>架构</th><th>Tag</th></tr></thead><tbody><tr><td>x86-64</td><td>amd64-latest</td></tr><tr><td>arm64</td><td>arm64v8-latest</td></tr><tr><td>armhf</td><td>arm32v7-latest</td></tr></tbody></table><hr><p><strong>玩客云是32位的，所以也可以用这个</strong></p><h2 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h2><p>你需要先安装好Docker  ，方法自行百度</p><p><strong>部署命令</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -d \<br>  <span class="hljs-attribute">--name</span>=code-server \<br>  -e <span class="hljs-attribute">PUID</span>=1000 \<br>  -e <span class="hljs-attribute">PGID</span>=1000 \<br>  -e <span class="hljs-attribute">TZ</span>=Europe/London \<br>  -e <span class="hljs-attribute">PASSWORD</span>=password  \<br>  -e <span class="hljs-attribute">SUDO_PASSWORD</span>=password  \<br>  -e <span class="hljs-attribute">PROXY_DOMAIN</span>=code-server.my.domain  \<br>  -p 8443:8443 \<br>  -v /path/<span class="hljs-keyword">to</span>/appdata/config:<span class="hljs-built_in">/config </span>\<br>  --restart unless-stopped \<br>  linuxserver/code-server<br></code></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>Docker镜像在使用的时候需要配置一些参数，这些参数使用 <code>:</code> 分隔，分别表示 <code>宿主机:容器内</code>。例如 <code>-p 8080:80</code> 指的是将容器内的<code>80</code>端口映射到宿主机上的<code>8080</code>端口，即通过宿主机网络访问的话，访问<code>8080</code>端口即是访问容器内的<code>80</code>端口。</p><h3 id="端口（-p）"><a href="#端口（-p）" class="headerlink" title="端口（-p）"></a>端口（-p）</h3><table><thead><tr><th>port</th><th>说明</th></tr></thead><tbody><tr><td><code>8443</code></td><td>WEB界面</td></tr></tbody></table><h3 id="环境变量（-e）"><a href="#环境变量（-e）" class="headerlink" title="环境变量（-e）"></a>环境变量（-e）</h3><table><thead><tr><th>env</th><th>说明</th></tr></thead><tbody><tr><td><code>PUID=1000</code></td><td>用户的 UID，详见下面的说明</td></tr><tr><td><code>PGID=1000</code></td><td>用户的 GID，详见下面的说明</td></tr><tr><td><code>TZ=Europe/London</code></td><td>设置时区，在国内的话可以使用 Asia/Shanghai</td></tr><tr><td><code>PASSWORD=password</code></td><td>Web界面的密码，如果不设置则不会启用认证</td></tr><tr><td><code>SUDO_PASSWORD=password</code></td><td>如果设置了该项，则在服务器的终端上用该密码使用sudo</td></tr><tr><td><code>PROXY_DOMAIN=code-server.my.domain</code></td><td>反向代理相关的设置，<a href="https://github.com/cdr/code-server/blob/master/doc/FAQ.md#sub-domains">具体参阅这里</a></td></tr></tbody></table><h3 id="卷映射（-v）"><a href="#卷映射（-v）" class="headerlink" title="卷映射（-v）"></a>卷映射（-v）</h3><table><thead><tr><th>volume</th><th>说明</th></tr></thead><tbody><tr><td><code>/config</code></td><td>配置文件所在路径</td></tr></tbody></table><h2 id="从文件加载环境变量"><a href="#从文件加载环境变量" class="headerlink" title="从文件加载环境变量"></a>从文件加载环境变量</h2><p>可以使用前缀名为 <code>FILE__</code> 的文件来加载环境变量。</p><p>例：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">-e FILE__PASSWORD=<span class="hljs-regexp">/run/</span>secrets/mysecretpassword<br></code></pre></td></tr></table></figure><p>将把 <code>/run/secrets/mysecretpassword</code> 文件中的内容作为 <code>PASSWORD</code> 变量的值。</p><h2 id="UID和GID"><a href="#UID和GID" class="headerlink" title="UID和GID"></a>UID和GID</h2><p>当使用 <code>-v</code> 映射卷的时候，宿主机和容器内会出现关于权限的问题，我们的镜像可以通过指定 <code>PUID</code> 和 <code>GUID</code> 来避免此类问题。</p><p>可以使用你目前正在使用的用户的UID和GID进行设置，这样就不会存在权限问题。</p><p>可以通过如下的方式查看当前用户的UID和GID：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> id <span class="hljs-variable">$user</span></span><br>  uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)<br></code></pre></td></tr></table></figure><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><p>访问WEB界面：<code>http://ip:8443</code></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210605150345.png" alt="image-20210605150345025"></p><p>如果要使用GitHub，把ssh密钥放在 /config/.ssh 文件夹</p><p>然后在菜单中打开终端，设置github的用户名和邮箱</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;username&quot;</span><br>git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;email address&quot;</span><br></code></pre></td></tr></table></figure><p>想换成中文，在拓展那里搜索“Chinese”,找到“简体中文”安装，重新加载页面即可。</p><p>哈哈哈，快去压榨玩客云的性能吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://coder.com/&quot;&gt;Code-server&lt;/a&gt; 是在远程服务器上运行的VS Code，通过浏览器访</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VsCode" scheme="https://blog.quickso.cn/tags/VsCode/"/>
    
    <category term="玩客云" scheme="https://blog.quickso.cn/tags/%E7%8E%A9%E5%AE%A2%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>基于宝塔面板的Google镜像网站设置教程</title>
    <link href="https://blog.quickso.cn/2021/05/20/%E5%9F%BA%E4%BA%8E%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9A%84Google%E9%95%9C%E5%83%8F%E7%BD%91%E7%AB%99%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
    <id>https://blog.quickso.cn/2021/05/20/%E5%9F%BA%E4%BA%8E%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9A%84Google%E9%95%9C%E5%83%8F%E7%BD%91%E7%AB%99%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/</id>
    <published>2021-05-20T11:25:43.000Z</published>
    <updated>2021-05-20T11:30:11.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立站点"><a href="#建立站点" class="headerlink" title="建立站点"></a>建立站点</h2><p>在宝塔面板后台点击：<strong>网站-添加站点-输入网站域名</strong></p><h2 id="反向代理设置"><a href="#反向代理设置" class="headerlink" title="反向代理设置"></a>反向代理设置</h2><p>安装面板后新建站点，然后设置站点选择反向代理（如下图所示）<br><a href="http://blog.chauncey09.com/usr/uploads/2019/08/3707359233.png"><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210520192934.png" alt="img"></a></p><p>然后设置反向代理</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">目标URL是： https:<span class="hljs-comment">//www.google.com.hk</span><br>发送域名也是： www<span class="hljs-selector-class">.google</span><span class="hljs-selector-class">.com</span>.hk<br><br><br>#注意：目标URL一定是www<span class="hljs-selector-class">.google</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-class">.hk</span> 后缀为二级区域域名.hk或者.sg。<br>否则会出现无法反代，连续多跳的问题。<br></code></pre></td></tr></table></figure><h2 id="SSL设置"><a href="#SSL设置" class="headerlink" title="SSL设置"></a>SSL设置</h2><p>点击SSL-开启https强制运行（这一步一定要有，因为谷歌目前已经强制https，所以镜像站点同样要以https运行）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;建立站点&quot;&gt;&lt;a href=&quot;#建立站点&quot; class=&quot;headerlink&quot; title=&quot;建立站点&quot;&gt;&lt;/a&gt;建立站点&lt;/h2&gt;&lt;p&gt;在宝塔面板后台点击：&lt;strong&gt;网站-添加站点-输入网站域名&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;反向代理设置&quot;&gt;</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Google" scheme="https://blog.quickso.cn/tags/Google/"/>
    
    <category term="宝塔" scheme="https://blog.quickso.cn/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>小米路由器mini刷openwrt系统</title>
    <link href="https://blog.quickso.cn/2021/04/24/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8mini%E5%88%B7openwrt%E7%B3%BB%E7%BB%9F/"/>
    <id>https://blog.quickso.cn/2021/04/24/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8mini%E5%88%B7openwrt%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-04-24T11:58:22.000Z</published>
    <updated>2021-04-24T12:20:23.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://www.mi.com/miwifilite/specs">这个路由器</a>有16M的ROM，还能装点东西，比斐讯K2还是好使得多，可以刷功能较齐备的openwrt，顺便搞个去广告，科学上网等</p><h1 id="刷机步骤"><a href="#刷机步骤" class="headerlink" title="刷机步骤"></a>刷机步骤</h1><p>小米路由器要刷其他系统，需要先获得SSH权限，而获得SSH权限则需要先刷开发版</p><p>只有开发版系统才能开启SSH权限，所以第一步我们需要将路由器系统刷为开发版。<br>到<a href="http://www.miui.com/thread-1776173-1-1.html">小米路由官网</a>去下载开发版系统ROM，建议直接刷这个版本<a href="http://bigota.miwifi.com/xiaoqiang/rom/r1cm/miwifi_r1cm_firmware_426e6_0.8.11.bin">小米路由器mini MiWiFi 开发版 0.8.11</a></p><blockquote><p>非常重要，如果版本高了，不能开启SSH，版本低了没有修改root用户的api。</p></blockquote><h3 id="刷开发版"><a href="#刷开发版" class="headerlink" title="刷开发版"></a>刷开发版</h3><p>刷入开发版非常简单，步骤如下：</p><ol><li>将上面下载好的固件改名为：<code>miwifi.bin</code> ，放入一个U盘的根目录，U盘需要是 <code>FAT32</code> 格式</li><li>U盘插到路由屁股上，拿根取卡针等尖头物件顶住 <code>reset</code> ，然后插入电源</li><li>路由器指示灯先会常亮黄色，等指示灯狂闪后就可以松开 <code>reset</code> 了，然后静候路由器指示灯变成蓝色</li></ol><p>以上做完就完成刷入开发版的步骤了。如果指示灯是红色，那么代表这个固件有问题，重新更换固件，断电再走一遍流程就可以了，不用担心会变砖。</p><h3 id="开启SSH权限"><a href="#开启SSH权限" class="headerlink" title="开启SSH权限"></a>开启SSH权限</h3><p>系统刷好开发版后，我们就可以开启系统的SSH权限了。开启SSH权限，需要登录<a href="http://d.miwifi.com/rom/ssh">官方网站</a>下载对应的工具包：</p><ol><li>请将下载的工具包 <code>bin</code> 文件复制到U盘（<code>FAT/FAT32</code> 格式）的根目录下，保证文件名为 <code>miwifi_ssh.bin</code> 「如果之前刷开发版用的同一个U盘，那之前放的 <code>miwifi.bin</code> 删除掉不需要多说吧？」；</li><li>断开小米路由器的电源，将U盘插入USB接口；</li><li>抵住 <code>reset</code> 按钮之后重新插上电源，指示灯变为黄色闪烁状态即可松开 <code>reset</code> 键；</li><li>等待3-5秒后安装完成之后，小米路由器会自动重启</li></ol><blockquote><p>官方给每个账号提供了一个随机的root密码，为了管理方便，我们可以登录后用 <code>passwd</code> 命令将root密码改成我们自己好记得的</p></blockquote><p>刷完 <code>miwifi_ssh.bin</code> 后，我们可以用Xshell等SSH客户端连接登录路由器，我这里使用的是FinalShell</p><p>如果不成功（红灯）就换个固件或者U盘</p><h3 id="刷Breed"><a href="#刷Breed" class="headerlink" title="刷Breed"></a>刷Breed</h3><p>SSH权限搞定后，我们要做的是换个BootLoder系统，大名鼎鼎的Breed（Boot and Recovery Environment for Embedded Devices）便是不二选择。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210424200506.png" alt="Breed Web 恢复控制台"></p><p>要刷入Breed也不复杂，操作步骤如下：</p><h3 id="1-下载Breed固件"><a href="#1-下载Breed固件" class="headerlink" title="1.下载Breed固件"></a>1.下载Breed固件</h3><p>在<a href="https://breed.hackpascal.net/">Breed固件列表</a>，查找自己设备所需的版本，小米路由器mini需要的是这个：<a href="https://breed.hackpascal.net/breed-mt7620-xiaomi-mini.bin">breed-mt7620-xiaomi-mini.bin</a></p><h3 id="2-备份原有的BootLoder"><a href="#2-备份原有的BootLoder" class="headerlink" title="2.备份原有的BootLoder"></a>2.备份原有的BootLoder</h3><p>使用SSH客户端连接登录路由系统，输入以下命令：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">dd <span class="hljs-keyword">if</span>=<span class="hljs-regexp">/dev/m</span>td1 of=<span class="hljs-regexp">/tmp/</span>xiaomi_uboot.bin<br></code></pre></td></tr></table></figure><p>系统返回，说明已经将原来的xiaomi_uboot.bin备份到/tmp：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">384</span>+<span class="hljs-number">0</span> records in<br><span class="hljs-attribute">384</span>+<span class="hljs-number">0</span> records out<br></code></pre></td></tr></table></figure><p>备份完成后将备份文件下载到本地妥善保存，用不到就最好了。不知道怎么下载？那就扔了不要了吧，就当这步备份操作白做了，反正出了问题自己负责o(<em>￣︶￣</em>)o</p><h3 id="3-刷Breed"><a href="#3-刷Breed" class="headerlink" title="3.刷Breed"></a>3.刷Breed</h3><p>用sftp之类工具把Breed固件上传到 <code>/tmp</code> 目录下，如果不会传那也可以ssh登录路由系统后执行下面的命令直接从网上下载：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd /tmp<br>wget http:<span class="hljs-regexp">//</span>down.sobaigu.com<span class="hljs-regexp">/files/</span>breed-mt7620-xiaomi-mini.bin<br></code></pre></td></tr></table></figure><p>这里，我的路由器wget用不了，所以下载<a href="https://winscp.net/eng/docs/lang:chs">WinSCP</a>，把下载好的固件上传到 <code>/tmp</code> 目录下</p><p>然后执行以下写入命令：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">mtd -r <span class="hljs-keyword">write</span> <span class="hljs-regexp">/tmp/</span>breed-mt7620-xiaomi-mini.bin Bootloader<br></code></pre></td></tr></table></figure><p>眨眼的功夫就刷写完成了，完成后关闭路由拔掉电源，找取卡针之类的尖物件抵住 <code>reset</code> 按钮，插上电源开机，等到路由指示灯狂闪的时候，就可以松开 <code>reset</code> 键，然后在用网线连接在该路由上的Wan口浏览器登录 <code>192.168.1.1</code> 就可以进入 <code>Breed web恢复控制台</code> 界面了，就如上面那个截图。</p><h3 id="刷固件"><a href="#刷固件" class="headerlink" title="刷固件"></a>刷固件</h3><p>在刷固件前，建议使用Breed固件备份功能，将原路由所有的项目备份好以备用，同样的用不到最好。</p><p>因为路由有16M的ROM，所以可选的固件还是蛮多的，潘朵拉，华硕改等固件都行，在此推荐一个，个人觉着还蛮不错的，功能也齐全：<a href="https://www.right.com.cn/forum/thread-423219-1-1.html">小米路由器Mini Lean R9.7.6 自编译固件</a></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210424201327.png" alt="固件更新"></p><p>选择 <code>固件更新</code> 》点击 <code>固件</code> 右侧的 <code>选择文件</code> ，选择刚下载的固件文件，然后点上传，不一会儿就完成了，新系统默认后台信息为：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">IP：   <span class="hljs-number">192.168.1.1</span><br>用户： root<br>密码： password<br></code></pre></td></tr></table></figure><p>至此，路由器系统脱胎换骨完成，有广告屏蔽，有科学上网还支持订阅地址，V2Ray，支持局域网网络唤醒设备，提供打印机服务…… 有点小瑕疵，可能有内存泄露开久了会死机，带宽监控统计图表不展示之类的，设置下每周定时重启，完全OK，知足常乐！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210424201406.png" alt="img"></p><h3 id="更换Wan口的MAC地址"><a href="#更换Wan口的MAC地址" class="headerlink" title="更换Wan口的MAC地址"></a>更换Wan口的MAC地址</h3><p>在SSH中输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/config/network<br></code></pre></td></tr></table></figure><p>修改其中一段</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gams">config <span class="hljs-string">&#x27;interface&#x27;</span> <span class="hljs-string">&#x27;lan&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;type&#x27;</span> <span class="hljs-string">&#x27;bridge&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;ifname&#x27;</span> <span class="hljs-string">&#x27;eth0.0&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;proto&#x27;</span> <span class="hljs-string">&#x27;static&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;netmask&#x27;</span> <span class="hljs-string">&#x27;255.255.255.0&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;ipaddr&#x27;</span> <span class="hljs-string">&#x27;192.168.200.1&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;macaddr&#x27;</span> <span class="hljs-string">&#x27;d8:64:c7:5e:f1:c6&#x27;</span><br><br>config <span class="hljs-string">&#x27;interface&#x27;</span> <span class="hljs-string">&#x27;wan&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;ifname&#x27;</span> <span class="hljs-string">&#x27;eth0.1&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;proto&#x27;</span> <span class="hljs-string">&#x27;dhcp&#x27;</span><br>        <span class="hljs-keyword">option</span> <span class="hljs-string">&#x27;macaddr&#x27;</span> <span class="hljs-string">&#x27;d8:64:c7:5e:f1:c6&#x27;</span><br></code></pre></td></tr></table></figure><p>修改Wan口Mac地址即可</p><p>之后保存，reboot 重启，就能看到所有修改都生效了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.mi.com/miwifilite/specs&quot;&gt;这个路由器&lt;/a&gt;有16M的ROM，还能装点东西</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="小米" scheme="https://blog.quickso.cn/tags/%E5%B0%8F%E7%B1%B3/"/>
    
    <category term="路由器" scheme="https://blog.quickso.cn/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="Openwrt" scheme="https://blog.quickso.cn/tags/Openwrt/"/>
    
  </entry>
  
  <entry>
    <title>为玩客云或树莓派安装LNMP和PhpMyAdmin</title>
    <link href="https://blog.quickso.cn/2021/04/09/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85MySQL%E5%92%8CPhpMyAdmin/"/>
    <id>https://blog.quickso.cn/2021/04/09/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85MySQL%E5%92%8CPhpMyAdmin/</id>
    <published>2021-04-09T15:01:55.000Z</published>
    <updated>2021-04-10T23:47:03.110Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、更换国内源，修改为清华镜像源（PS-如果不更换，可能…………）"><a href="#一、更换国内源，修改为清华镜像源（PS-如果不更换，可能…………）" class="headerlink" title="一、更换国内源，修改为清华镜像源（PS. 如果不更换，可能…………）"></a>一、更换国内源，修改为清华镜像源（PS. 如果不更换，可能…………）</h2><p>备份原文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak<br>sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak<br></code></pre></td></tr></table></figure><p>更改系统源文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo vim /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>将原内容注释掉，然后添加：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi<br>deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi<br></code></pre></td></tr></table></figure><p>更改系统源：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo vim /etc/apt/sources.list.d/raspi.list<br></code></pre></td></tr></table></figure><p>将原内容注释并改为</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui<br>deb-src http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui<br></code></pre></td></tr></table></figure><p>玩客云：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu-ports/</span> focal main restricted universe multiverse<br><span class="hljs-comment"># deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse</span><br><br>deb http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu-ports/</span> focal-security main restricted universe multiverse<br><span class="hljs-comment"># deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse</span><br><br>deb http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu-ports/</span> focal-updates main restricted universe multiverse<br><span class="hljs-comment"># deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse</span><br><br>deb http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu-ports/</span> focal-backports main restricted universe multiverse<br><span class="hljs-comment"># deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><p>更新软件包索引</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get update<br>sudo apt-get upgrade<br></code></pre></td></tr></table></figure><h2 id="一、安装Nginx"><a href="#一、安装Nginx" class="headerlink" title="一、安装Nginx"></a>一、安装Nginx</h2><p>安装Nginx，输入下面的命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install -y nginx<br></code></pre></td></tr></table></figure><p>安装完毕后启动nginx服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo service nginx restart<br></code></pre></td></tr></table></figure><h2 id="二、安装PHP"><a href="#二、安装PHP" class="headerlink" title="二、安装PHP"></a>二、安装PHP</h2><p>安装PHP7.0，输入下面的命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install -y nginx php7.0-fpm php7.0-cli php7.0-curl php7.0-gd php7.0-mcrypt php7.0-cgi php7.0-mysql php7.0-mbstring<br></code></pre></td></tr></table></figure><p>安装完毕后启动php7.0服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo service php7.0-fpm restart<br></code></pre></td></tr></table></figure><h2 id="三、安装MySQL（MariaDB）"><a href="#三、安装MySQL（MariaDB）" class="headerlink" title="三、安装MySQL（MariaDB）"></a>三、安装MySQL（MariaDB）</h2><blockquote><p>「重要前提」上面的 “更新软件包索引” 必须执行成功之后，才能进行安装</p></blockquote><p>安装MySQL（MariaDB）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install mariadb-server<br></code></pre></td></tr></table></figure><p>运行  mysql_secure_installation  工具：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mysql_secure_installation<br></code></pre></td></tr></table></figure><p>根据向导指引进行相关设置：</p><ul><li>第一步： “输入 root 的当前密码：”，默认为空，直接按Enter即可；</li><li>第二步： “设置 root 密码？”，这里请输入 Y 并按  Enter。设置 root 登陆密码确保数据安全。然后向导将要求输入新密码和确认密码。</li><li>第三步： “删除匿名用户？”，输入 Y 或 N 并按  Enter。</li><li>第四步： “禁止远程 root 登录？”，输入 Y 或 N 并按  Enter；根据自己需要设置，我这里设置为N。</li><li>第五步： “删除测试数据库并访问它？”，输入 Y 或 N 并按  Enter。</li></ul><p>开始尽情使用 MySQL 吧：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mysql -u root -p<br></code></pre></td></tr></table></figure><p>输入前面设置的密码并回车，然后……就和我们平时使用的 mysql 一样了！</p><h2 id="四、配置Nginx-PHP-MySQL"><a href="#四、配置Nginx-PHP-MySQL" class="headerlink" title="四、配置Nginx+PHP+MySQL"></a>四、配置Nginx+PHP+MySQL</h2><p>1.配置Nginx让它能处理 PHP</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo nano /etc/nginx/sites-available/default<br></code></pre></td></tr></table></figure><p>找到下面这段代码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">location / &#123;<br>       <span class="hljs-comment"># First attempt to serve request as file, then</span><br>       <span class="hljs-comment"># as directory, then fall back to displaying a 404.</span><br>       try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =<span class="hljs-number">404</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这段代码的{}里面，添加一行代码：index index.html index.htm index.php;</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-keyword">location</span> / &#123;<br>       <span class="hljs-meta"># First attempt to serve request as file, then</span><br>       <span class="hljs-meta"># as directory, then fall back to displaying a 404.</span><br>       try_files $uri $uri/ =<span class="hljs-number">404</span>;<br>       <span class="hljs-keyword">index</span> <span class="hljs-keyword">index</span>.html <span class="hljs-keyword">index</span>.htm <span class="hljs-keyword">index</span>.php;<br>&#125;<br></code></pre></td></tr></table></figure><p>再找到下面的代码：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean">#location ~ \.php$ &#123;<br>        #       include snippets/fastcgi-php.conf;<br>        #<br>        #       # With php-fpm (or other unix sockets):<br>        #       fastcgi_pass unix:/var/run/php/php7<span class="hljs-number">.0</span>-fpm.sock;<br>        #       # With php-cgi (or other tcp sockets):<br>        #       fastcgi_pass <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">9000</span>;<br>        #&#125;<br></code></pre></td></tr></table></figure><p>改为：（注意要去掉location 和 }前面的“#”号）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">location</span> <span class="hljs-regexp">~ \.php$</span> &#123;<br>        <span class="hljs-comment">#       include snippets/fastcgi-php.conf;</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#       # With php-fpm (or other unix sockets):</span><br>                <span class="hljs-attribute">fastcgi_pass</span> unix:/run/php/php7.0-fpm.sock;<br>                <span class="hljs-attribute">fastcgi_param</span> SCRIPT_FILENAME $document_root$fastcgi_script_name;<br>                <span class="hljs-attribute">include</span> fastcgi_params;<br>        <span class="hljs-comment">#       # With php-cgi (or other tcp sockets):</span><br>        <span class="hljs-comment">#       fastcgi_pass 127.0.0.1:9000;</span><br>        &#125;<br></code></pre></td></tr></table></figure><p>Ctrl + O 保存再 Ctrl + X 退出。<br>最后重启 Nginx 即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo service nginx restart<br></code></pre></td></tr></table></figure><p>测试运行php文件，在/var/www/html/目录下新建一个index.php文件，这里直接su获取最高权限来完成：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">pi@raspberrypi:~ $ su<br>密码：《输入你的root密码》<br>root@raspberrypi:/home/pi<span class="hljs-comment"># cat &gt;/var/www/html/index.php#回车进入编辑状态</span><br>&lt;?php<br>phpinfo();<br>?&gt;<br></code></pre></td></tr></table></figure><p>好了，用浏览器打开http:// 树莓派的IP你就可以看到熟悉的页面啦！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210409232609.png" alt="image-20210409232609347"></p><p><strong>配置MySQL，允许远程连接</strong><br>用shell登录mysql：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#默认无密码，直接回车</span><br>mysql -u root -p<br><br><span class="hljs-comment">#设置允许远程连接并修改root密码，123456为root用户的新密码，%代表所有主机</span><br>UPDATE mysql.user SET host=<span class="hljs-string">&#x27;%&#x27;</span>,authentication_string=PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>), PLUGIN=<span class="hljs-string">&#x27;mysql_native_password&#x27;</span> WHERE USER=<span class="hljs-string">&#x27;root&#x27;</span>;<br><br><span class="hljs-comment">#刷新权限</span><br>FLUSH PRIVILEGES;<br><br><span class="hljs-comment">#退出myslq</span><br><span class="hljs-built_in">exit</span><br><br><span class="hljs-comment">#重启mysql服务</span><br>sudo service mysql restart<br><br></code></pre></td></tr></table></figure><p>如果远程连接提示“100061”错误，那就继续修改/etc/mysql/mariadb.conf.d文件夹中的50-server.cnf文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#用nano打开50-server.cnf</span><br>sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf<br><br><span class="hljs-comment">#修改其中的bind-address为</span><br>bind-address = 0.0.0.0<br><br><span class="hljs-comment">#Ctrl + O 保存再 Ctrl + X 退出,并重启mysql服务即可生效。</span><br>sudo service mysql restart<br><br></code></pre></td></tr></table></figure><h2 id="五、安装PhpMyAdmin"><a href="#五、安装PhpMyAdmin" class="headerlink" title="五、安装PhpMyAdmin"></a>五、安装PhpMyAdmin</h2><p>1.要将PHPMyAdmin软件包安装到树莓派中，需要运行以下命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install phpmyadmin<br></code></pre></td></tr></table></figure><p>2.PHPMyAdmin现在将开始安装到树莓派。在此过程中，系统将会询问你已经运行的Web服务器类型。</p><p>我这里使用的是nginx，所以点击Esc退出，你可以根据自己的情况选择</p><p>安装完毕后，再把phpmyadmin链接到/var/www/html目录下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo ln -s /usr/share/phpmyadmin /var/www/html<br></code></pre></td></tr></table></figure><p>浏览器打开 http:// 树莓派ip/phpmyadmin 就可以用root和新密码登录管理mysql数据库了！！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210409232831.png" alt="image-20210409232830987"></p><p>好了，到这里就差不多结束了，遇到问题要多使用搜索引擎搜索哦！不要放弃，慢慢来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、更换国内源，修改为清华镜像源（PS-如果不更换，可能…………）&quot;&gt;&lt;a href=&quot;#一、更换国内源，修改为清华镜像源（PS-如果不更换，可能…………）&quot; class=&quot;headerlink&quot; title=&quot;一、更换国内源，修改为清华镜像源（PS. 如果不更换</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="玩客云" scheme="https://blog.quickso.cn/tags/%E7%8E%A9%E5%AE%A2%E4%BA%91/"/>
    
    <category term="树莓派" scheme="https://blog.quickso.cn/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    <category term="Nginx" scheme="https://blog.quickso.cn/tags/Nginx/"/>
    
    <category term="PHP" scheme="https://blog.quickso.cn/tags/PHP/"/>
    
    <category term="MySQL" scheme="https://blog.quickso.cn/tags/MySQL/"/>
    
    <category term="PhpMyAdmin" scheme="https://blog.quickso.cn/tags/PhpMyAdmin/"/>
    
  </entry>
  
  <entry>
    <title>在玩客云或树莓派上通过ffmpeg将视频推流到直播平台</title>
    <link href="https://blog.quickso.cn/2021/04/09/%E5%9C%A8%E7%8E%A9%E5%AE%A2%E4%BA%91%E6%88%96%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E9%80%9A%E8%BF%87ffmpeg%E5%B0%86%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81%E5%88%B0%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0/"/>
    <id>https://blog.quickso.cn/2021/04/09/%E5%9C%A8%E7%8E%A9%E5%AE%A2%E4%BA%91%E6%88%96%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E9%80%9A%E8%BF%87ffmpeg%E5%B0%86%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81%E5%88%B0%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0/</id>
    <published>2021-04-09T14:32:37.000Z</published>
    <updated>2021-06-12T01:31:38.163Z</updated>
    
    <content type="html"><![CDATA[<p>为了压榨玩客云的性能，搞了直播推流，下面教大家怎么推流</p><p>我把玩客云刷了Powersee的玩客云第二版固件，具体看<a href="https://powersee.gitee.io/2021/02/wankeyun-2/">这里</a>，当然使用树莓派也可以</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="1、安装ffmpeg"><a href="#1、安装ffmpeg" class="headerlink" title="1、安装ffmpeg"></a>1、安装ffmpeg</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install ffmpeg<br></code></pre></td></tr></table></figure><h4 id="2、启动推流"><a href="#2、启动推流" class="headerlink" title="2、启动推流"></a>2、启动推流</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -re -i /root/video.mp<span class="hljs-number">4</span> -vcodec libx<span class="hljs-number">264</span> -acodec aac -strict -<span class="hljs-number">2</span> -f flv <span class="hljs-string">&quot;你的推流地址&quot;</span><br></code></pre></td></tr></table></figure><p>举个栗子（B站）：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ffmpeg -re -i <span class="hljs-regexp">/mnt/</span>aria2-downloads<span class="hljs-regexp">/xianghuo.mkv -vcodec libx264 -acodec aac -strict -2 -f flv &quot;rtmp:/</span><span class="hljs-regexp">/live-push.bilivideo.com/</span>live-bvc/直播码<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210409224001.png" alt="image-20210409224001344"></p><p>更多详细说明可参考ffmpeg官方文档：<a href="http://ffmpeg.org/ffmpeg.html">http://ffmpeg.org/ffmpeg.html</a></p><h4 id="3、后台执行"><a href="#3、后台执行" class="headerlink" title="3、后台执行"></a>3、后台执行</h4><p>（1）安装screen</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install screen<br></code></pre></td></tr></table></figure><p>（2）新建终端</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">screen -S live</span><br></code></pre></td></tr></table></figure><p>（3）在新的终端执行命令后</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">Ctrl+<span class="hljs-selector-tag">A</span>+D<br></code></pre></td></tr></table></figure><p>（4）重新进入终端</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">screen -r live</span><br></code></pre></td></tr></table></figure><p>（5）删除某一个终端</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos">screen -<span class="hljs-keyword">S</span> 进程号 -<span class="hljs-keyword">X</span> <span class="hljs-keyword">quit</span><br></code></pre></td></tr></table></figure><h4 id="4-推流成功"><a href="#4-推流成功" class="headerlink" title="4.推流成功"></a>4.推流成功</h4><p><a href="https://live.bilibili.com/21577989">https://live.bilibili.com/21577989</a></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210409224250.png" alt="image-20210409224250405"></p><p>玩客云直播时的参数</p><p>CPU基本跑满</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210409224355.png" alt="image-20210409224355158"></p><p>好了，赶快去实践吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为了压榨玩客云的性能，搞了直播推流，下面教大家怎么推流&lt;/p&gt;
&lt;p&gt;我把玩客云刷了Powersee的玩客云第二版固件，具体看&lt;a href=&quot;https://powersee.gitee.io/2021/02/wankeyun-2/&quot;&gt;这里&lt;/a&gt;，当然使用树莓派也可以&lt;</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ffmpeg" scheme="https://blog.quickso.cn/tags/ffmpeg/"/>
    
    <category term="玩客云" scheme="https://blog.quickso.cn/tags/%E7%8E%A9%E5%AE%A2%E4%BA%91/"/>
    
    <category term="树莓派" scheme="https://blog.quickso.cn/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>阿里云盘+OneManager+Heroku+CFWorkers实现阿里云盘网络挂载</title>
    <link href="https://blog.quickso.cn/2021/03/28/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98-OneManager-Heroku-CFWorkers%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%BD%91%E7%BB%9C%E6%8C%82%E8%BD%BD/"/>
    <id>https://blog.quickso.cn/2021/03/28/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98-OneManager-Heroku-CFWorkers%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%BD%91%E7%BB%9C%E6%8C%82%E8%BD%BD/</id>
    <published>2021-03-28T10:20:05.000Z</published>
    <updated>2021-03-28T11:36:45.369Z</updated>
    
    <content type="html"><![CDATA[<p>你是不是想和我一样把阿里云盘搭建成一个分享平台呢？像下面这样</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328182903.png" alt="image-20210328182902788"></p><p>实现直链下载，不通过客户端，还可以分享给别人</p><p>我们先来看看实现的方法</p><p>下面有两种挂载程序（任选其一）</p><p>1.Onemanager</p><p><a href="https://github.com/qkqpttgf/OneManager-php">https://github.com/qkqpttgf/OneManager-php</a></p><p>2.ShareList</p><p><a href="https://github.com/reruin/sharelist">https://github.com/reruin/sharelist</a></p><p>部署方式有许多种，我们这里采用Heroku部署（要白嫖嘛~）</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>阿里云盘账户</li><li>Heroku账户</li><li>GitHub 项目地址</li></ul><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><p>我们先来讲Onemanager</p><p>首先注册一个Heroku账号（可能需要科学上网）</p><p><a href="https://signup.heroku.com/login">https://signup.heroku.com/login</a></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184128.png" alt="image-20210328184128510"></p><p>这个不用教了吧~</p><p>注册好后登陆，打开Onemanager的github项目</p><p><a href="https://github.com/qkqpttgf/OneManager-php">https://github.com/qkqpttgf/OneManager-php</a></p><p>点击“<strong>Deploy to Heroku</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184305.png" alt="image-20210328184305549"></p><p>App name 随便填一个，下面选择美国或欧洲，然后点击“Deploy app”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184431.png" alt="image-20210328184431355"></p><p>然后等它构建完成，点击“<strong>View</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184659.png" alt="image-20210328184659731"></p><p>点击“点击开始安装程序”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184754.png" alt="image-20210328184754371"></p><p>语言选择中文，然后点击新建API Key</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184844.png" alt="image-20210328184844603"></p><p>然后滑到下边找到<strong>API Key</strong>点击<strong>Reveal</strong>，复制key</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328184957.png" alt="image-20210328184956986"></p><p>然后返回刚才的页面，粘贴key并设置管理密码</p><p>之后会进入这个页面，点击“登陆”，输入你刚才设置的密码</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328185252.png" alt="image-20210328185252740"></p><p>然后点击“管理-设置”，然后在添加盘那里选择“Aliyundrive”，然后点击“添加盘”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328185440.png" alt="image-20210328185440480"></p><p>这个随便填一下</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328185616.png" alt="image-20210328185616863"></p><p>然后点击“确认”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328185658.png" alt="image-20210328185658487"></p><p>接下来我们获取refresh_token</p><p>首先登陆阿里云盘</p><p><a href="https://www.aliyundrive.com/drive">https://www.aliyundrive.com/drive</a></p><p>登陆阿里云盘之后，打开开发者工具，切换到<code>Application</code>选项卡，点开<code>Local storage</code>,会有一个<code>token</code>项，点开就可以看到<code>refresh_token</code>了</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328185933.png"></p><p>复制粘贴到刚才的页面，选择下面的其中之一</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328190144.png" alt="image-20210328190144678"></p><p>这样就搭建好了，你可以在设置里美化页面，设置参数</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328190233.png" alt="image-20210328190232979"></p><p>接下来我们讲ShareList</p><p>还是注册登陆好 <strong>Heroku</strong></p><p>打开<a href="https://github.com/reruin/sharelist%EF%BC%8C%E7%82%B9%E5%87%BB%E2%80%9C%E6%9F%A5%E7%9C%8B%E6%96%87%E6%A1%A3%E2%80%9D">https://github.com/reruin/sharelist，点击“查看文档”</a></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328190652.png" alt="image-20210328190652385"></p><p>点击“<strong>Deploy toHeroku</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328190832.png" alt="image-20210328190832463"></p><p>名字name随便起，json地址   </p><p> <a href="https://raw.githubusercontent.com/reruin/sharelist/master/package.json">https://raw.githubusercontent.com/reruin/sharelist/master/package.json</a></p><p>点击Deploy app，开始创建</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328190956.png" alt="image-20210328190956545"></p><p>创建成功，点击“View“</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328191604.png" alt="image-20210328191604095"></p><p>进行初始化</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328191803.png" alt="image-20210328191802983"></p><p>要求按下面这个，虚拟路径那里选择“AliyunDrive”，然后点击保存</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328191705.png" alt="image-20210328191705132"></p><p>下一步填入refresh_token，方法还是上面那个</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328192122.png" alt="image-20210328192122118"></p><p>好了，这样就搭建好了。为了更好的访问速度可以进行CF Workers部署</p><h2 id="CF-Workers部署"><a href="#CF-Workers部署" class="headerlink" title="CF Workers部署"></a>CF Workers部署</h2><p>打开</p><p><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></p><p>1.进入cf workers后台，选择新建worker</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328192858.png" alt="image-20210328192858698"></p><p>2.复制如下代码，到worker编辑器中(xxxx.herokuapp.com改成你自己的)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 替换成你想镜像的站点</span><br><span class="hljs-keyword">const</span> upstream = <span class="hljs-string">&#x27;xxxx.herokuapp.com&#x27;</span><br> <br><span class="hljs-comment">// 如果那个站点有专门的移动适配站点，否则保持和上面一致</span><br><span class="hljs-keyword">const</span> upstream_mobile = <span class="hljs-string">&#x27;xxxx.herokuapp.com&#x27;</span><br> <br><span class="hljs-comment">// 你希望禁止哪些国家访问</span><br><span class="hljs-keyword">const</span> blocked_region = [<span class="hljs-string">&#x27;KP&#x27;</span>]<br> <br><span class="hljs-comment">// 禁止自访问</span><br><span class="hljs-keyword">const</span> blocked_ip_address = [<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>]<br> <br><span class="hljs-comment">// 替换成你想镜像的站点</span><br><span class="hljs-keyword">const</span> replace_dict = &#123;<br>    <span class="hljs-string">&#x27;$upstream&#x27;</span>: <span class="hljs-string">&#x27;$custom_domain&#x27;</span>,<br>    <span class="hljs-string">&#x27;//google.com&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br> <br><span class="hljs-comment">//以下内容都不用动</span><br>addEventListener(<span class="hljs-string">&#x27;fetch&#x27;</span>, <span class="hljs-keyword">event</span> =&gt; &#123;<br>    <span class="hljs-keyword">event</span>.respondWith(fetchAndApply(<span class="hljs-keyword">event</span>.request));<br>&#125;)<br> <br><span class="hljs-function"><span class="hljs-keyword">async</span> function <span class="hljs-title">fetchAndApply</span>(<span class="hljs-params">request</span>)</span> &#123;<br> <br>    <span class="hljs-keyword">const</span> region = request.headers.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;cf-ipcountry&#x27;</span>).toUpperCase();<br>    <span class="hljs-keyword">const</span> ip_address = request.headers.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;cf-connecting-ip&#x27;</span>);<br>    <span class="hljs-keyword">const</span> user_agent = request.headers.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;user-agent&#x27;</span>);<br> <br>    <span class="hljs-keyword">let</span> response = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">let</span> url = <span class="hljs-keyword">new</span> URL(request.url);<br>    <span class="hljs-keyword">let</span> url_host = url.host;<br> <br>    <span class="hljs-keyword">if</span> (url.protocol == <span class="hljs-string">&#x27;http:&#x27;</span>) &#123;<br>        url.protocol = <span class="hljs-string">&#x27;https:&#x27;</span><br>        response = Response.redirect(url.href);<br>        <span class="hljs-keyword">return</span> response;<br>    &#125;<br> <br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">await</span> device_status(user_agent)) &#123;<br>        upstream_domain = upstream<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        upstream_domain = upstream_mobile<br>    &#125;<br> <br>    url.host = upstream_domain;<br> <br>    <span class="hljs-keyword">if</span> (blocked_region.includes(region)) &#123;<br>        response = <span class="hljs-keyword">new</span> Response(<span class="hljs-string">&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;</span>, &#123;<br>            status: <span class="hljs-number">403</span><br>        &#125;);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(blocked_ip_address.includes(ip_address))&#123;<br>        response = <span class="hljs-keyword">new</span> Response(<span class="hljs-string">&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;</span>, &#123;<br>            status: <span class="hljs-number">403</span><br>        &#125;);<br>    &#125; <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">let</span> method = request.method;<br>        <span class="hljs-keyword">let</span> request_headers = request.headers;<br>        <span class="hljs-keyword">let</span> new_request_headers = <span class="hljs-keyword">new</span> Headers(request_headers);<br> <br>        new_request_headers.<span class="hljs-keyword">set</span>(<span class="hljs-string">&#x27;Host&#x27;</span>, upstream_domain);<br>        new_request_headers.<span class="hljs-keyword">set</span>(<span class="hljs-string">&#x27;Referer&#x27;</span>, url.href);<br> <br>        <span class="hljs-keyword">let</span> original_response = <span class="hljs-keyword">await</span> fetch(url.href, &#123;<br>            method: method,<br>            headers: new_request_headers<br>        &#125;)<br> <br>        <span class="hljs-keyword">let</span> original_response_clone = original_response.clone();<br>        <span class="hljs-keyword">let</span> original_text = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">let</span> response_headers = original_response.headers;<br>        <span class="hljs-keyword">let</span> new_response_headers = <span class="hljs-keyword">new</span> Headers(response_headers);<br>        <span class="hljs-keyword">let</span> status = original_response.status;<br> <br>        new_response_headers.<span class="hljs-keyword">set</span>(<span class="hljs-string">&#x27;access-control-allow-origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>);<br>        new_response_headers.<span class="hljs-keyword">set</span>(<span class="hljs-string">&#x27;access-control-allow-credentials&#x27;</span>, <span class="hljs-literal">true</span>);<br>        new_response_headers.delete(<span class="hljs-string">&#x27;content-security-policy&#x27;</span>);<br>        new_response_headers.delete(<span class="hljs-string">&#x27;content-security-policy-report-only&#x27;</span>);<br>        new_response_headers.delete(<span class="hljs-string">&#x27;clear-site-data&#x27;</span>);<br> <br>        <span class="hljs-keyword">const</span> content_type = new_response_headers.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;content-type&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (content_type.includes(<span class="hljs-string">&#x27;text/html&#x27;</span>) &amp;&amp; content_type.includes(<span class="hljs-string">&#x27;UTF-8&#x27;</span>)) &#123;<br>            original_text = <span class="hljs-keyword">await</span> replace_response_text(original_response_clone, upstream_domain, url_host);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            original_text = original_response_clone.body<br>        &#125;<br> <br>        response = <span class="hljs-keyword">new</span> Response(original_text, &#123;<br>            status,<br>            headers: new_response_headers<br>        &#125;)<br>    &#125;<br>    <span class="hljs-keyword">return</span> response;<br>&#125;<br> <br><span class="hljs-function"><span class="hljs-keyword">async</span> function <span class="hljs-title">replace_response_text</span>(<span class="hljs-params">response, upstream_domain, host_name</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> text = <span class="hljs-keyword">await</span> response.text()<br> <br>    <span class="hljs-keyword">var</span> i, j;<br>    <span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> replace_dict) &#123;<br>        j = replace_dict[i]<br>        <span class="hljs-keyword">if</span> (i == <span class="hljs-string">&#x27;$upstream&#x27;</span>) &#123;<br>            i = upstream_domain<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i == <span class="hljs-string">&#x27;$custom_domain&#x27;</span>) &#123;<br>            i = host_name<br>        &#125;<br> <br>        <span class="hljs-keyword">if</span> (j == <span class="hljs-string">&#x27;$upstream&#x27;</span>) &#123;<br>            j = upstream_domain<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (j == <span class="hljs-string">&#x27;$custom_domain&#x27;</span>) &#123;<br>            j = host_name<br>        &#125;<br> <br>        <span class="hljs-keyword">let</span> re = <span class="hljs-keyword">new</span> RegExp(i, <span class="hljs-string">&#x27;g&#x27;</span>)<br>        text = text.replace(re, j);<br>    &#125;<br>    <span class="hljs-keyword">return</span> text;<br>&#125;<br> <br><span class="hljs-function"><span class="hljs-keyword">async</span> function <span class="hljs-title">device_status</span> (<span class="hljs-params">user_agent_info</span>)</span> &#123;<br>    <span class="hljs-keyword">var</span> agents = [<span class="hljs-string">&quot;Android&quot;</span>, <span class="hljs-string">&quot;iPhone&quot;</span>, <span class="hljs-string">&quot;SymbianOS&quot;</span>, <span class="hljs-string">&quot;Windows Phone&quot;</span>, <span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>];<br>    <span class="hljs-keyword">var</span> flag = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> v = <span class="hljs-number">0</span>; v &lt; agents.length; v++) &#123;<br>        <span class="hljs-keyword">if</span> (user_agent_info.indexOf(agents[v]) &gt; <span class="hljs-number">0</span>) &#123;<br>            flag = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> flag;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后点击“保存并部署“，然后你可以改一个你喜欢的名称</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328193133.png" alt="image-20210328193133570"></p><p>自定义域名可以参考这篇文章</p><p><a href="https://vircloud.net/exp/cf-worker-domain.html">https://vircloud.net/exp/cf-worker-domain.html</a></p><p>演示站点</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>huangepan.hgnet.workers.dev/<br></code></pre></td></tr></table></figure><p>好了，快去实践吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;你是不是想和我一样把阿里云盘搭建成一个分享平台呢？像下面这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210328182903.png&quot; alt=&quot;image-2021032</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="阿里云盘" scheme="https://blog.quickso.cn/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/"/>
    
    <category term="OneManager" scheme="https://blog.quickso.cn/tags/OneManager/"/>
    
  </entry>
  
  <entry>
    <title>GiWiFI校园网认证过程分析与模拟登录</title>
    <link href="https://blog.quickso.cn/2021/03/22/GiWiFI%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90%E4%B8%8E%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/"/>
    <id>https://blog.quickso.cn/2021/03/22/GiWiFI%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90%E4%B8%8E%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/</id>
    <published>2021-03-22T15:29:58.000Z</published>
    <updated>2021-03-22T15:49:10.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>GiWiFi是由上海寰创网络科技有限公司基于<a href="http://www.wifidog.org/">wifidog</a>项目开发的一套网关管理系统, 通常被应用于校园网行业.</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210322234723.png" alt="img"></p><h1 id="认证机制"><a href="#认证机制" class="headerlink" title="认证机制"></a>认证机制</h1><p>由于GiWiFi是基于wifidog项目的, 所以大致流程也差不多</p><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><h3 id="用户上线"><a href="#用户上线" class="headerlink" title="用户上线"></a>用户上线</h3><ol><li>用户访问网络，通过iptables将未认证的用户dnat到wifidog进程，wifidog通过307报文将用户重定向到认证服务器</li><li>用户打开认证服务器登录页面，输入用户名密码，发送认证请求</li><li>认证成功的话服务器会发送302报文，携带token信息重定向到wifidog页面。认证失败的话会返回失败页面</li><li>用户携带token信息向wifidog发起认证请求，wifidog再向认证服务器发起请求，认证成功后授权，并将用户重定向到成功页面</li></ol><h3 id="保活和下线"><a href="#保活和下线" class="headerlink" title="保活和下线"></a>保活和下线</h3><ol><li>wifidog会定时向认证服务器发送保活消息(相当于<strong>心跳</strong>)</li><li>当用户主动请求下线后，wifidog此时并没有下线</li><li>当wifidog再次发起保活请求时，认证服务器会告诉它用户已下线，此时wifidog会将用户下线</li></ol><h1 id="网页登录"><a href="#网页登录" class="headerlink" title="网页登录"></a>网页登录</h1><p>客户端引导下载页对于不同的设备和系统使用了UA进行区分，经过测试，提供的客户端有Windows、macOS、iOS以及Android版本（果然Linux又被忽视了，显示的是Android版的下载按钮🌝）</p><p>由于对此类认证客户端的排斥和心理洁癖，我便开始寻找使用网页认证，甚至是使用脚本模拟认证的方法，果不其然，经过一番分析与搜寻，我找到了一些东西</p><h4 id="你藏得好深啊，登录框"><a href="#你藏得好深啊，登录框" class="headerlink" title="你藏得好深啊，登录框"></a>你藏得好深啊，登录框</h4><p>此前网页的认证过程为</p><ol><li>打开任意http页面后被劫持至<code>172.17.1.1:8062/redirect</code></li><li>返回307跳转至认证页</li><li>在认证页里输入账号密码登录认证</li><li>关闭认证页，一段时间内即可正常上网</li></ol><p>而现在跳转后仅显示客户端的下载按钮，直觉意识到这是一个专用于客户端引导下载的页面，真正的认证页仍另藏他处</p><p>事实正是如此，对比历史记录，现在的跳转页面的域名是<code>172.17.1.1</code>(校园网网关IP)，此前的认证页则是<code>http://login.gwifi.com.cn/cmps/admin.php/api/login/</code></p><h2 id="修改UA"><a href="#修改UA" class="headerlink" title="修改UA"></a>修改UA</h2><p>先修改UA为ipad（使用UA浏览器插件即可，或者浏览器里的自定义UA）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Mozilla</span>/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (iPad; CPU OS <span class="hljs-number">6</span>_<span class="hljs-number">0</span> like Mac OS X) AppleWebKit/<span class="hljs-number">536</span>.<span class="hljs-number">26</span> (KHTML, like Gecko) Version/<span class="hljs-number">6</span>.<span class="hljs-number">0</span> Mobile/<span class="hljs-number">10</span>A<span class="hljs-number">5376</span>e Safari/<span class="hljs-number">8536</span>.<span class="hljs-number">25</span><br></code></pre></td></tr></table></figure><p>将客户端引导下载页的URL参数粘贴到认证页的URL后并打开，就能看到之前的认证页了（单纯打开首页会显示It works! ，不加任何参数打开的话则是跳转至新浪首页，阿巴阿巴~）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>login.gwifi.com.cn<span class="hljs-regexp">/cmps/</span>admin.php<span class="hljs-regexp">/api/</span>login/?gw_address=<span class="hljs-number">172.17</span>.<span class="hljs-number">1.1</span>&amp;gw_port=<span class="hljs-number">8060</span>&amp;gw_id=GWIFI-zhongbeixinshang01&amp;ip=<span class="hljs-number">10.16</span>.<span class="hljs-number">100.174</span>&amp;mac=你的MAC地址<br></code></pre></td></tr></table></figure><p>认证页打开之后仍是一个大大的客户端下载按钮，但不要慌。打开审查元素就会发现，所有的登录框、重设密码框、注册框等都在，只是被隐藏掉了</p><p>去掉隐藏样式，正常输入账号密码登录即可，和之前的操作一模一样（登录后会跳转至百度首页，看来这两个页面是同一位鬼才写的🌝）</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210322234856.png" alt="image-20210322234856216"></p><h2 id="登录接口及参数分析"><a href="#登录接口及参数分析" class="headerlink" title="登录接口及参数分析"></a>登录接口及参数分析</h2><p>找到了登录框之后，就可以开始分析接口和参数了</p><p>直接看页面代码吧，写的挺乱的，好在未经过混淆，关键部分：</p><h3 id="登录接口"><a href="#登录接口" class="headerlink" title="登录接口"></a>登录接口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> loginAction  = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">params</span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> btn = $(<span class="hljs-string">&quot;#first_button&quot;</span>);<br>    <span class="hljs-keyword">var</span> round = <span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">var</span> form = $(<span class="hljs-string">&quot;#frmLogin&quot;</span>);<br>    $.ajax(&#123;<br>        url: <span class="hljs-string">&quot;/cmps/admin.php/api/loginaction?round=&quot;</span>+round,<br>        data: form.serialize(),<br>        type: <span class="hljs-string">&quot;post&quot;</span>,<br>        <span class="hljs-keyword">async</span>: <span class="hljs-literal">false</span>,<br>        dataType: <span class="hljs-string">&quot;json&quot;</span>,<br>        success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (data.status === <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">if</span>(data.data.reasoncode == <span class="hljs-string">&quot;44&quot;</span>)&#123;<br>                    params = getWechatParams(data);<br>                    <span class="hljs-comment">//showSelectMessage(params);</span><br>                    wechatAuth(params.okParams);<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-built_in">window</span>.location.href = data.info;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                btn.removeAttr(<span class="hljs-string">&#x27;disabled&#x27;</span>);<br>                doFailedLogin(data,<span class="hljs-string">&quot;frmLogin&quot;</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到接口为<code>/cmps/admin.php/api/loginaction</code>，参数都在登录表单里：</p><p><em>关键部分已手动打码</em></p><table><thead><tr><th>参数名</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>access_type</td><td>2</td><td>作用未知</td></tr><tr><td>acsign</td><td>***</td><td>登录状态接口中的sign字段</td></tr><tr><td>btype</td><td>pc</td><td>猜测为平台类型</td></tr><tr><td>client_mac</td><td>***</td><td>客户端MAC</td></tr><tr><td>contact_phone</td><td>400-038-5858</td><td>服务电话</td></tr><tr><td>devicemode</td><td></td><td>默认空值，作用未知</td></tr><tr><td>gw_address</td><td>172.17.1.1</td><td>网关地址</td></tr><tr><td>gw_id</td><td>***</td><td>AP的SSID</td></tr><tr><td>gw_port</td><td>8060</td><td>网关端口</td></tr><tr><td>lastaccessurl</td><td></td><td>默认空值，作用未知</td></tr><tr><td>logout_reason</td><td>0</td><td>作用未知</td></tr><tr><td>mac</td><td>***</td><td>同client_mac</td></tr><tr><td>name</td><td>***</td><td>账号</td></tr><tr><td>online_time</td><td>0</td><td>猜测为在线时间，作用未知</td></tr><tr><td>page_time</td><td>1535509645</td><td>登录页时间戳</td></tr><tr><td>password</td><td>***</td><td>密码</td></tr><tr><td>sign</td><td>***</td><td>签名，可从登录表单中获取</td></tr><tr><td>station_cloud</td><td>login.gwifi.com.cn</td><td>作用未知</td></tr><tr><td>station_sn</td><td>***</td><td>猜测为基站ID</td></tr><tr><td>suggest_phone</td><td>400-038-5858</td><td>同contact_phone</td></tr><tr><td>url</td><td><a href="http://www.baidu.com/">http://www.baidu.com</a></td><td>登录成功后跳转的网站</td></tr><tr><td>user_agent</td><td></td><td>默认空值，作用未知</td></tr></tbody></table><p>观察后发现登录所需的大部分参数在认证页的URL参数里已经有了，剩下的有一部分已经在登录表单里填好了，另一部分需要从下文的登录状态接口中取到，将其组合起来后发送POST请求</p><p>登录成功后返回JSON数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;status&quot;</span>:<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;info&quot;</span>:<span class="hljs-string">&quot;http://172.17.1.1:8060/wifidog/auth?token=***&amp;info=***&quot;</span>,<br>    <span class="hljs-attr">&quot;data&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;auth_verify&quot;</span>:<span class="hljs-number">1</span>,<br>        <span class="hljs-attr">&quot;reasoncode&quot;</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">&quot;remain_time&quot;</span>:<span class="hljs-number">1053640</span>,<br>        <span class="hljs-attr">&quot;limit_time&quot;</span>:<span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">&quot;cost_type&quot;</span>:<span class="hljs-number">4</span>,<br>        <span class="hljs-attr">&quot;serviceplan_id&quot;</span>:<span class="hljs-string">&quot;1357&quot;</span>,<br>        <span class="hljs-attr">&quot;is_share&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>,<br>        <span class="hljs-attr">&quot;wechat_enable&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-attr">&quot;bw_up&quot;</span>:<span class="hljs-string">&quot;2048&quot;</span>,<br>        <span class="hljs-attr">&quot;bw_down&quot;</span>:<span class="hljs-string">&quot;10240&quot;</span>,<br>        <span class="hljs-attr">&quot;ontrial&quot;</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">&quot;need_complete_data&quot;</span>:<span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">&quot;complete_data_url&quot;</span>:<span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">&quot;permit_intranet&quot;</span>:<span class="hljs-number">2</span>,<br>        <span class="hljs-attr">&quot;permit_internet&quot;</span>:<span class="hljs-number">2</span>,<br>        <span class="hljs-attr">&quot;carrier_operator&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>,<br>        <span class="hljs-attr">&quot;network_type&quot;</span>:<span class="hljs-string">&quot;2&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中的<code>info</code>字段的URL用作登录验证，使用GET请求就可以完成整个认证登录的流程了</p><p>登录失败的话<code>info</code>字段则会返回百度首页的URL，再次吐槽一下🌝</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;status&quot;</span>:<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">&quot;info&quot;</span>:<span class="hljs-string">&quot;http:\/\/www.baidu.com&quot;</span>,<br>    <span class="hljs-attr">&quot;data&quot;</span>:<span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="登录状态接口"><a href="#登录状态接口" class="headerlink" title="登录状态接口"></a>登录状态接口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initData</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">//获取终端信息</span><br>    $.ajax(&#123;<br>        url: <span class="hljs-string">&quot;http://172.17.1.1:8060/wifidog/get_auth_state?ip=***&amp;mac=***&amp;sign=***&amp;callback=***&quot;</span>,<br>        dataType:<span class="hljs-string">&#x27;jsonp&#x27;</span>,<br>        success: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>&#123;<br>            c = <span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;(&#x27;</span> + data.data + <span class="hljs-string">&#x27;)&#x27;</span>);<br>            <span class="hljs-keyword">if</span>(data.resultCode == <span class="hljs-number">0</span>)&#123;<br>                fixData(c);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">window</span>.top.location.href = <span class="hljs-string">&quot;http://www.baidu.com&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;,<br>        error:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;,<br>        cache: <span class="hljs-literal">false</span><br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>同样可以看到接口为<code>/wifidog/get_auth_state</code>，参数为IP、MAC、签名和回调函数名，其中的签名可以直接在页面表单里取到</p><p>返回结果为JSONP数据，提取为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;resultCode&quot;</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">&quot;data&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>auth_state<span class="hljs-string">&quot;:2,&quot;</span>gw_id<span class="hljs-string">&quot;:&quot;</span>***<span class="hljs-string">&quot;,&quot;</span>access_type<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">2</span><span class="hljs-string">&quot;,&quot;</span>authStaType<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">0</span><span class="hljs-string">&quot;,&quot;</span>station_sn<span class="hljs-string">&quot;:&quot;</span>***<span class="hljs-string">&quot;,&quot;</span>client_mac<span class="hljs-string">&quot;:&quot;</span>***<span class="hljs-string">&quot;,&quot;</span>online_time<span class="hljs-string">&quot;:11,&quot;</span>logout_reason<span class="hljs-string">&quot;:7,&quot;</span>contact_phone<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">400</span><span class="hljs-number">-038</span><span class="hljs-number">-5858</span><span class="hljs-string">&quot;,&quot;</span>suggest_phone<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">400</span><span class="hljs-number">-038</span><span class="hljs-number">-5858</span><span class="hljs-string">&quot;,&quot;</span>station_cloud<span class="hljs-string">&quot;:&quot;</span>login.gwifi.com.cn<span class="hljs-string">&quot;,&quot;</span>orgId<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">899</span><span class="hljs-string">&quot;,&quot;</span>sign<span class="hljs-string">&quot;:&quot;</span>***<span class="hljs-string">&quot;&#125;&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>其中的<code>auth_state</code>字段值为<code>2</code>时为正常登录状态</p><p>观察登录成功后执行的操作，是替换了部分表单数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fixData</span>(<span class="hljs-params">data</span>) </span>&#123;<br>    $(<span class="hljs-string">&quot;.gw_id&quot;</span>).val(data.gw_id);<br>    $(<span class="hljs-string">&quot;.access_type&quot;</span>).val(data.access_type);<br>    $(<span class="hljs-string">&quot;.station_sn&quot;</span>).val(data.station_sn);<br>    $(<span class="hljs-string">&quot;.client_mac&quot;</span>).val(data.client_mac);<br>    $(<span class="hljs-string">&quot;.online_time&quot;</span>).val(data.online_time);<br>    $(<span class="hljs-string">&quot;.logout_reason&quot;</span>).val(data.logout_reason);<br>    $(<span class="hljs-string">&quot;.contact_phone&quot;</span>).val(data.contact_phone);<br>    $(<span class="hljs-string">&quot;.suggest_phone&quot;</span>).val(data.suggest_phone);<br>    $(<span class="hljs-string">&quot;.station_cloud&quot;</span>).val(data.station_cloud);<br>    $(<span class="hljs-string">&quot;.acsign&quot;</span>).val(data.sign);<br>&#125;<br></code></pre></td></tr></table></figure><p>进行模拟登录时也应一一替换</p><p><em>需要注意的是参数<code>callback</code>是必需的，不然将不会返回<code>sign</code>字段值</em></p><h3 id="登出接口"><a href="#登出接口" class="headerlink" title="登出接口"></a>登出接口</h3><p>登出功能在客户端引导下载页上，接口及参数为<code>http://172.17.1.1/getApp.htm?action=logout</code></p><p>返回数据为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;resultCode&quot;</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">&quot;data&quot;</span>:[]<br>&#125;<br></code></pre></td></tr></table></figure><p>其中<code>resultCode</code>字段值为<code>0</code>时登出成功</p><h2 id="模拟登录脚本"><a href="#模拟登录脚本" class="headerlink" title="模拟登录脚本"></a>模拟登录脚本</h2><p>现在登录相关接口和所需参数已经了解，可以开始写模拟登录了</p><p>这里使用Python来实现，理论上对所有GiWiFi系统通用</p><p>这里需要事先安装好Python以及requests、netifaces库</p><p>你可能会用到<a href="https://huangenet.lanzous.com/iMFn0n7nnvc">Visualcppbuildtools</a>（安装C++插件）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> netifaces<br><span class="hljs-keyword">from</span> getpass <span class="hljs-keyword">import</span> getpass<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlparse, parse_qs<br><br>SCRIPT_VERSION = <span class="hljs-string">&quot;1.0.3.2&quot;</span><br><br>HEADERS = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25&#x27;</span>,<br>    <span class="hljs-string">&#x27;accept-encoding&#x27;</span>: <span class="hljs-string">&#x27;gzip, deflate, br&#x27;</span>,<br>    <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh-TW;q=0.8,zh;q=0.6,en;q=0.4,ja;q=0.2&#x27;</span>,<br>    <span class="hljs-string">&#x27;cache-control&#x27;</span>: <span class="hljs-string">&#x27;max-age=0&#x27;</span><br>&#125;<br><br>PARSER = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter, <br>    description=<span class="hljs-string">&#x27;GiWiFi认证登录脚本&#x27;</span>, <br>    epilog=<span class="hljs-string">&#x27;(c) 2018 journey.ad&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-g&#x27;</span>, <span class="hljs-string">&#x27;--gateway&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;网关IP&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-u&#x27;</span>, <span class="hljs-string">&#x27;--username&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;用户名&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-p&#x27;</span>, <span class="hljs-string">&#x27;--password&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;密码&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-q&#x27;</span>, <span class="hljs-string">&#x27;--quit&#x27;</span>, action=<span class="hljs-string">&#x27;store_true&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;登出&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-d&#x27;</span>, <span class="hljs-string">&#x27;--daemon&#x27;</span>, action=<span class="hljs-string">&#x27;store_true&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;在后台守护运行&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-v&#x27;</span>, <span class="hljs-string">&#x27;--verbose&#x27;</span>, action=<span class="hljs-string">&#x27;store_true&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;额外输出一些技术性信息&#x27;</span>)<br>PARSER.add_argument(<span class="hljs-string">&#x27;-V&#x27;</span>, <span class="hljs-string">&#x27;--version&#x27;</span>, action=<span class="hljs-string">&#x27;version&#x27;</span>, <br>        version=<span class="hljs-string">&#x27;giwifi-auth-helper &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(SCRIPT_VERSION))<br><br>CONFIG = PARSER.parse_args()<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.quit:<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.gateway:<br>        CONFIG.gateway = netifaces.gateways()[<span class="hljs-string">&#x27;default&#x27;</span>][netifaces.AF_INET][<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.password:<br>            CONFIG.gateway = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入网关地址(%s):&#x27;</span> % (CONFIG.gateway)) <span class="hljs-keyword">or</span> CONFIG.gateway<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.username:<br>        CONFIG.username = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入上网账号:&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.password:<br>        CONFIG.password = getpass(<span class="hljs-string">&#x27;请输入账号密码:&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.gateway:<br>        CONFIG.gateway = netifaces.gateways()[<span class="hljs-string">&#x27;default&#x27;</span>][netifaces.AF_INET][<span class="hljs-number">0</span>]<br>        CONFIG.gateway = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入网关地址(%s):&#x27;</span> % (CONFIG.gateway)) <span class="hljs-keyword">or</span> CONFIG.gateway<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    logcat(<span class="hljs-string">&#x27;正在获取网关信息…&#x27;</span>)<br><br>    <span class="hljs-keyword">try</span>:<br>        authUrl = requests.get(<span class="hljs-string">&#x27;http://%s:8062/redirect&#x27;</span> % (CONFIG.gateway), timeout=<span class="hljs-number">5</span>).url<br>        authParmas = &#123;k: v[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> parse_qs(urlparse(authUrl).query).items()&#125;<br><br>        loginPage = requests.get(<span class="hljs-string">&#x27;http://login.gwifi.com.cn/cmps/admin.php/api/login/?&#x27;</span> + urlparse(authUrl).query, headers=HEADERS, timeout=<span class="hljs-number">5</span>).text<br><br>        pagetime = re.search(<span class="hljs-string">r&#x27;name=&quot;page_time&quot; value=&quot;(.*?)&quot;&#x27;</span>, loginPage).group(<span class="hljs-number">1</span>)<br>        sign = re.search(<span class="hljs-string">r&#x27;name=&quot;sign&quot; value=&quot;(.*?)&quot;&#x27;</span>, loginPage).group(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">except</span> requests.exceptions.ConnectionError:<br>        logcat(<span class="hljs-string">&#x27;连接失败，请检查网关地址是否正确&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        logcat(<span class="hljs-string">&#x27;连接超时，可能已超出上网区间&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">except</span> AttributeError:<br>        logcat(<span class="hljs-string">&#x27;解析失败，可能网关设备重启或系统已更新&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    authState = getAuthState(authParmas, sign)<br><br>    <span class="hljs-keyword">if</span> CONFIG.quit:<br>        logout(authParmas)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> authState:<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> authState[<span class="hljs-string">&#x27;auth_state&#x27;</span>] == <span class="hljs-number">2</span>:<br>            printStatus(authParmas, authState)<br>            logcat(<span class="hljs-string">&#x27;你已登录，无需再次登录&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            data = &#123;<br>                <span class="hljs-string">&#x27;access_type&#x27;</span>: authState[<span class="hljs-string">&#x27;access_type&#x27;</span>],<br>                <span class="hljs-string">&#x27;acsign&#x27;</span>: authState[<span class="hljs-string">&#x27;sign&#x27;</span>],<br>                <span class="hljs-string">&#x27;btype&#x27;</span>: <span class="hljs-string">&#x27;pc&#x27;</span>,<br>                <span class="hljs-string">&#x27;client_mac&#x27;</span>: authState[<span class="hljs-string">&#x27;client_mac&#x27;</span>],<br>                <span class="hljs-string">&#x27;contact_phone&#x27;</span>: <span class="hljs-string">&#x27;400-038-5858&#x27;</span>,<br>                <span class="hljs-string">&#x27;devicemode&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                <span class="hljs-string">&#x27;gw_address&#x27;</span>: authParmas[<span class="hljs-string">&#x27;gw_address&#x27;</span>],<br>                <span class="hljs-string">&#x27;gw_id&#x27;</span>: authParmas[<span class="hljs-string">&#x27;gw_id&#x27;</span>],<br>                <span class="hljs-string">&#x27;gw_port&#x27;</span>: authParmas[<span class="hljs-string">&#x27;gw_port&#x27;</span>],<br>                <span class="hljs-string">&#x27;lastaccessurl&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                <span class="hljs-string">&#x27;logout_reason&#x27;</span>: authState[<span class="hljs-string">&#x27;logout_reason&#x27;</span>],<br>                <span class="hljs-string">&#x27;mac&#x27;</span>: authParmas[<span class="hljs-string">&#x27;mac&#x27;</span>],<br>                <span class="hljs-string">&#x27;name&#x27;</span>: CONFIG.username,<br>                <span class="hljs-string">&#x27;online_time&#x27;</span>: authState[<span class="hljs-string">&#x27;online_time&#x27;</span>],<br>                <span class="hljs-string">&#x27;page_time&#x27;</span>: pagetime,<br>                <span class="hljs-string">&#x27;password&#x27;</span>: CONFIG.password,<br>                <span class="hljs-string">&#x27;sign&#x27;</span>: sign,<br>                <span class="hljs-string">&#x27;station_cloud&#x27;</span>: <span class="hljs-string">&#x27;login.gwifi.com.cn&#x27;</span>,<br>                <span class="hljs-string">&#x27;station_sn&#x27;</span>: authState[<span class="hljs-string">&#x27;station_sn&#x27;</span>],<br>                <span class="hljs-string">&#x27;suggest_phone&#x27;</span>: <span class="hljs-string">&#x27;400-038-5858&#x27;</span>,<br>                <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span>,<br>                <span class="hljs-string">&#x27;user_agent&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> CONFIG.verbose:<br>                logcat(data)<br><br>            result = login(data)<br>            <span class="hljs-keyword">if</span> result[<span class="hljs-string">&#x27;status&#x27;</span>]:<br>                authState = getAuthState(authParmas, sign)<br>                printStatus(authParmas, authState)<br><br>                <span class="hljs-keyword">if</span> authState[<span class="hljs-string">&#x27;auth_state&#x27;</span>] == <span class="hljs-number">2</span>:<br>                    logcat(<span class="hljs-string">&#x27;认证成功&#x27;</span>)<br>                <span class="hljs-keyword">else</span>:<br>                    logcat(<span class="hljs-string">&#x27;认证失败&#x27;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                logcat(<span class="hljs-string">&#x27;认证失败，提示信息：%s&#x27;</span> % (result[<span class="hljs-string">&#x27;info&#x27;</span>]))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>(<span class="hljs-params">data</span>):</span><br>    logcat(<span class="hljs-string">&#x27;正在尝试认证…&#x27;</span>)<br><br>    <span class="hljs-keyword">try</span>:<br>        resp = json.loads(requests.post(<span class="hljs-string">&#x27;http://login.gwifi.com.cn/cmps/admin.php/api/loginaction&#x27;</span>, data=data, timeout=<span class="hljs-number">5</span>).text)<br>        result = &#123;<br>            <span class="hljs-string">&#x27;status&#x27;</span>: <span class="hljs-literal">False</span>,<br>            <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-literal">None</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> CONFIG.verbose:<br>            logcat(resp)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;wifidog/auth&#x27;</span> <span class="hljs-keyword">in</span> resp[<span class="hljs-string">&#x27;info&#x27;</span>]:<br>            requests.get(resp[<span class="hljs-string">&#x27;info&#x27;</span>])<br>            result[<span class="hljs-string">&#x27;status&#x27;</span>] = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>:<br>            result[<span class="hljs-string">&#x27;info&#x27;</span>] = resp[<span class="hljs-string">&#x27;info&#x27;</span>]<br><br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        logcat(<span class="hljs-string">&#x27;连接超时，可能已超出上网区间&#x27;</span>)<br>        <br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">return</span> result<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logout</span>(<span class="hljs-params">authParmas</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        resp = json.loads(requests.get(<span class="hljs-string">&#x27;http://%s/getApp.htm?action=logout&#x27;</span> % (authParmas[<span class="hljs-string">&#x27;gw_address&#x27;</span>])).text)<br>        <br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        logcat(<span class="hljs-string">&#x27;连接超时，可能已超出上网区间&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">if</span> resp[<span class="hljs-string">&#x27;resultCode&#x27;</span>] == <span class="hljs-number">0</span>:<br>        logcat(<span class="hljs-string">&#x27;下线成功&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        logcat(<span class="hljs-string">&#x27;下线失败&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getAuthState</span>(<span class="hljs-params">authParmas, sign</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        params = &#123;<br>            <span class="hljs-string">&#x27;ip&#x27;</span>: authParmas[<span class="hljs-string">&#x27;ip&#x27;</span>],<br>            <span class="hljs-string">&#x27;mac&#x27;</span>: authParmas[<span class="hljs-string">&#x27;mac&#x27;</span>],<br>            <span class="hljs-string">&#x27;sign&#x27;</span>: sign,<br>            <span class="hljs-string">&#x27;callback&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><br>        &#125;<br>    <br>        resp = json.loads(requests.get(<span class="hljs-string">&#x27;http://%s:%s/wifidog/get_auth_state&#x27;</span> % (authParmas[<span class="hljs-string">&#x27;gw_address&#x27;</span>], authParmas[<span class="hljs-string">&#x27;gw_port&#x27;</span>]), params=params, timeout=<span class="hljs-number">5</span>).text[<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>])<br>            <br>    <span class="hljs-keyword">except</span> KeyError:<br>        logcat(<span class="hljs-string">&#x27;所需参数不存在&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">except</span> requests.exceptions.Timeout:<br>        logcat(<span class="hljs-string">&#x27;连接超时，可能已超出上网区间&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">if</span> CONFIG.verbose:<br>        logcat(resp)<br><br>    <span class="hljs-keyword">if</span> resp[<span class="hljs-string">&#x27;resultCode&#x27;</span>] == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> json.loads(resp[<span class="hljs-string">&#x27;data&#x27;</span>])<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printStatus</span>(<span class="hljs-params">authParmas, authState</span>):</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> CONFIG.verbose:<br>        clear()<br><br>    print(<br><span class="hljs-string">&#x27;&#x27;&#x27;--------------------------------------------</span><br><span class="hljs-string">SSID:             %s</span><br><span class="hljs-string">AP MAC:           %s</span><br><span class="hljs-string">GateWay:          %s</span><br><span class="hljs-string">IP:               %s</span><br><span class="hljs-string">MAC:              %s</span><br><span class="hljs-string">Station SN:       %s</span><br><span class="hljs-string">Logged:           %s</span><br><span class="hljs-string">--------------------------------------------&#x27;&#x27;&#x27;</span><br>    % (<br>            authParmas[<span class="hljs-string">&#x27;gw_id&#x27;</span>],<br>            authParmas[<span class="hljs-string">&#x27;apmac&#x27;</span>],<br>            authParmas[<span class="hljs-string">&#x27;gw_address&#x27;</span>],<br>            authParmas[<span class="hljs-string">&#x27;ip&#x27;</span>],<br>            authParmas[<span class="hljs-string">&#x27;mac&#x27;</span>],<br>            authState[<span class="hljs-string">&#x27;station_sn&#x27;</span>],<br>            <span class="hljs-string">&#x27;yes&#x27;</span> <span class="hljs-keyword">if</span>(authState[<span class="hljs-string">&#x27;auth_state&#x27;</span>] == <span class="hljs-number">2</span>) <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;no&#x27;</span><br>        )<br>    )<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">clear</span>():</span><br>    os.system(<span class="hljs-string">&#x27;cls&#x27;</span> <span class="hljs-keyword">if</span> os.name == <span class="hljs-string">&#x27;nt&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;clear&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logcat</span>(<span class="hljs-params">msg, level=<span class="hljs-string">&#x27;I&#x27;</span></span>):</span><br>    print(<span class="hljs-string">&#x27;%s %s: %s&#x27;</span> % (time.ctime().split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">2</span>], level, msg))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">if</span> CONFIG.daemon:<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            main()<br>            time.sleep(<span class="hljs-number">30</span>)<br>    <span class="hljs-keyword">else</span>:<br>        main()<br>        <span class="hljs-built_in">input</span>()<br></code></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210322234221.png" alt="image-20210322234221276"></p><p>本文参考：</p><p>1.<a href="https://nocilol.me/archives/lab/giwifi-auth-process-analysis-and-simulation-login/">https://nocilol.me/archives/lab/giwifi-auth-process-analysis-and-simulation-login/</a></p><p>2.<a href="https://github.com/icepie/giwifi-gear/wiki/GiWiFi-%E5%88%86%E6%9E%90">https://github.com/icepie/giwifi-gear/wiki/GiWiFi-%E5%88%86%E6%9E%90</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;GiWiFi是由上海寰创网络科技有限公司基于&lt;a href=&quot;http://www.wifidog.org/&quot;&gt;wifidog&lt;/a&gt;项目开</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.quickso.cn/tags/Python/"/>
    
    <category term="Giwifi" scheme="https://blog.quickso.cn/tags/Giwifi/"/>
    
  </entry>
  
  <entry>
    <title>ShadowsocksR一键安装脚本</title>
    <link href="https://blog.quickso.cn/2021/03/13/ShadowsocksR%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.quickso.cn/2021/03/13/ShadowsocksR%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</id>
    <published>2021-03-13T01:42:03.000Z</published>
    <updated>2021-03-13T01:49:00.142Z</updated>
    
    <content type="html"><![CDATA[<p>目前逗比网站逗比根据地（doub.io）已经关站无法打开，其它类似名称网站均为山寨版本。但是 doubi 的一键安装脚本仍然可以正常使用。<br>目前网上的各个 ShadowsocksR 脚本基本都是只有 安装/启动/重启 等基础功能，对于小白来说还是不够简单方便，既然是一键脚本，那么就要尽可能地简单</p><h3 id="逗比的SSR脚本特点"><a href="#逗比的SSR脚本特点" class="headerlink" title="逗比的SSR脚本特点"></a>逗比的SSR脚本特点</h3><ul><li>支持 限制 用户速度</li><li>支持 限制 端口设备数</li><li>支持 显示 当前连接IP</li><li>支持 显示 SS/SSR连接 二维码</li><li>支持 切换管理 单/多端口</li><li>支持 一键安装 锐速</li><li>支持 一键安装 BBR</li><li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li></ul><h3 id="安装环境要求"><a href="#安装环境要求" class="headerlink" title="安装环境要求"></a>安装环境要求</h3><p>支持架构：Openvz、KVM、Xen<br>系统支持: CentOS6+ / Debian6+ / Ubuntu14+</p><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>我一般使用 <code>aes-256-ctr + auth_aes128_md5 + tls1.2_ticket_fastauth</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -N --no-check-certificate https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/ToyoDAdoubi/</span>doubi<span class="hljs-regexp">/master/</span>ssr.sh &amp;&amp; chmod x ssr.sh &amp;&amp; bash ssr.sh<br></code></pre></td></tr></table></figure><h3 id="安装锐速及BBR"><a href="#安装锐速及BBR" class="headerlink" title="安装锐速及BBR"></a>安装锐速及BBR</h3><p>如果你的VPS服务器 <code>不是OpenVZ虚拟</code>，而是 KVM/Xen，那么可以在 SSR 安装完毕后，接着安装 锐速/BBR 对网络进行加速。<br>重新运行一键安装脚本 <code>bash ssr.sh</code>，根据提示选项即可</p><h3 id="各平台客户端下载"><a href="#各平台客户端下载" class="headerlink" title="各平台客户端下载"></a>各平台客户端下载</h3><ol><li>Windows客户端下载地址：<br><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases">https://github.com/shadowsocksrr/shadowsocksr-csharp/releases</a></li><li>Mac客户端下载地址：<br><a href="https://github.com/qinyuhang/ShadowsocksX-NG-R/releases">https://github.com/qinyuhang/ShadowsocksX-NG-R/releases</a></li><li>Linux客户端下载地址：<br><a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki/Installation">https://github.com/shadowsocks/shadowsocks-qt5/wiki/Installation</a></li><li>Android/安卓客户端下载地址：<br><a href="https://github.com/shadowsocksrr/shadowsocksr-android/releases">https://github.com/shadowsocksrr/shadowsocksr-android/releases</a></li><li>iOS/iPad/苹果客户端可使用 Wingy &amp; Shadowrocket 或者 Potatso Lite</li></ol><h3 id="免费SSR订阅地址"><a href="#免费SSR订阅地址" class="headerlink" title="免费SSR订阅地址"></a>免费SSR订阅地址</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/ssrsub/</span>ssr<span class="hljs-regexp">/master/</span>ssrsub<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>ssr.hgnet.workers.dev/<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前逗比网站逗比根据地（doub.io）已经关站无法打开，其它类似名称网站均为山寨版本。但是 doubi 的一键安装脚本仍然可以正常使用。&lt;br&gt;目前网上的各个 ShadowsocksR 脚本基本都是只有 安装/启动/重启 等基础功能，对于小白来说还是不够简单方便，既然是一</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ShadowsocksR" scheme="https://blog.quickso.cn/tags/ShadowsocksR/"/>
    
    <category term="科学上网" scheme="https://blog.quickso.cn/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Java开发环境的搭建</title>
    <link href="https://blog.quickso.cn/2021/03/11/Java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.quickso.cn/2021/03/11/Java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-11T11:22:49.000Z</published>
    <updated>2021-03-11T12:55:34.927Z</updated>
    
    <content type="html"><![CDATA[<p>开发Java应用需要部署Java的开发环境，就像做饭需要厨房这个环境，Java的jdk就相当于做饭的工具。</p><h2 id="1-平台"><a href="#1-平台" class="headerlink" title="1.平台"></a>1.平台</h2><p>Java SE  ：Java标准版</p><p>Java EE ：Java企业版</p><p>Java ME：为机顶盒、移动电话和PDA之类嵌入式消费电子设备提供的Java语言平台</p><h2 id="2-安装Java-SE平台"><a href="#2-安装Java-SE平台" class="headerlink" title="2.安装Java SE平台"></a>2.安装Java SE平台</h2><p>下载地址：</p><p><a href="https://www.oracle.com/java/technologies/javase-downloads.html">https://www.oracle.com/java/technologies/javase-downloads.html</a></p><p>选择适合你的JDK，我这里下载的是Windows x64版本（如果你是Linux或者Mac系统下载对应版本即可）</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311194940.png" alt="image-20210311194940249"></p><p>下载完毕，开始安装….</p><p>点击“安装包”，选择“<strong>下一步</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311194738.png" alt="image-20210311194738316"></p><p>这里我们更改一下安装位置（方便后面配置系统变量）</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195118.png" alt="image-20210311195118348"></p><p>比如我这里修改成D盘的位置</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195222.png" alt="image-20210311195222259"></p><p>然后点击“<strong>下一步</strong>”，就开始安装了</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195330.png" alt="image-20210311195330732"></p><p>这样软件就安装好了</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195406.png" alt="image-20210311195405994"></p><h4 id="配置系统变量"><a href="#配置系统变量" class="headerlink" title="配置系统变量"></a>配置系统变量</h4><p>在<strong>此电脑</strong>那里右键选择“<strong>属性</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195948.png" alt="image-20210311195948038"></p><p>在右边那里选择“<strong>高级系统设置</strong>”，然后选择“<strong>环境变量</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311195848.png" alt="image-20210311195848228"></p><h3 id="1-设置系统变量JAVA-HOME"><a href="#1-设置系统变量JAVA-HOME" class="headerlink" title="1.设置系统变量JAVA_HOME"></a>1.设置系统变量JAVA_HOME</h3><p>在“<strong>系统变量</strong>”那里点击“<strong>新建</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311200148.png" alt="image-20210311200148258"></p><p>变量名填</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">JAV<span class="hljs-built_in">A_HOME</span><br></code></pre></td></tr></table></figure><p>变量值填写你的JDK安装位置</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311200450.png" alt="image-20210311200450935"></p><h3 id="2-设置系统环境Path的设置"><a href="#2-设置系统环境Path的设置" class="headerlink" title="2.设置系统环境Path的设置"></a>2.设置系统环境Path的设置</h3><p>选中变量“<strong>Path</strong>”，点击“<strong>编辑</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311200845.png" alt="image-20210311200845227"></p><p>在弹出来的对话框中选择“<strong>新建</strong>”，填入</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-meta">%</span>JAVA_HOME<span class="hljs-meta">%</span>/bi<span class="hljs-symbol">n</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311201103.png" alt="image-20210311201103059"></p><h3 id="3-设置系统环境classpath变量"><a href="#3-设置系统环境classpath变量" class="headerlink" title="3.设置系统环境classpath变量"></a>3.设置系统环境classpath变量</h3><p>新建系统变量</p><p>变量名填</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">CLASSPATH</span><br></code></pre></td></tr></table></figure><p>变量值填</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">.;%JAVA_HOME%<span class="hljs-regexp">/lib/</span>dt.jar;%JAVA_HOME%<span class="hljs-regexp">/lib/</span>tools.jar<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311201923.png" alt="image-20210311201923848"></p><h2 id="3-测试是否安装成功"><a href="#3-测试是否安装成功" class="headerlink" title="3.测试是否安装成功"></a>3.测试是否安装成功</h2><p>1.点击“<strong>Win+R</strong>”，输入“<strong>CMD</strong>”</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311202724.png" alt="image-20210311202724748"></p><p>然后输入“<strong>javac</strong>”,会出现下面的一大堆东西，即是安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311202827.png" alt="image-20210311202826947"></p><p>如果出现“<strong>javac不是内部或外部命令，也不是可运行的程序</strong><br><strong>或批处理文件。</strong>”你就需要重新安装或者重新设置环境变量</p><p>2.写一个<strong>HelloWord</strong>程序</p><p>我这里是使用<strong>VsCode</strong>，你可以使用notepad++或其他编辑器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mian</span><span class="hljs-params">(String args[])</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello，World！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后保存为“<strong>Hello.java</strong>”</p><p>然后使用CMD 进入“<strong>Hello.java</strong>”所在路径（你可以在.Java文件那里右键选择属性查看）</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311203705.png" alt="image-20210311203705352"></p><p>使用“cd 文件路径”命令进入</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311203804.png" alt="image-20210311203804581"></p><p><strong>编译.java文件</strong></p><p>在CMD输入</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">javac <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Hello</span>.</span></span>java<br></code></pre></td></tr></table></figure><p>如果提示“<strong>错误: 编码 GBK 的不可映射字符</strong>”，则输入</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">javac -encoding UTF-<span class="hljs-number">8</span> <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Hello</span>.</span></span>java<br></code></pre></td></tr></table></figure><p>编译成功就会多一个名为“<strong>Hello.class</strong>”的文件</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311204822.png" alt="image-20210311204822848"></p><p><strong>运行</strong></p><p>在CMD输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">java Hello</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210311205345.png" alt="image-20210311205345018"></p><p>如果提示</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">错误: 在类 Hello 中找不到 <span class="hljs-selector-tag">main</span> 方法, 请将 <span class="hljs-selector-tag">main</span> 方法定义为:<br>   public static void <span class="hljs-selector-tag">main</span>(String<span class="hljs-selector-attr">[]</span> args)<br>否则 JavaFX 应用程序类必须扩展javafx<span class="hljs-selector-class">.application</span>.Application<br></code></pre></td></tr></table></figure><p>则修改.java文件为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello，World！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>重新编译并运行即可</p><p>是不是很简单呢？嘿嘿~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开发Java应用需要部署Java的开发环境，就像做饭需要厨房这个环境，Java的jdk就相当于做饭的工具。&lt;/p&gt;
&lt;h2 id=&quot;1-平台&quot;&gt;&lt;a href=&quot;#1-平台&quot; class=&quot;headerlink&quot; title=&quot;1.平台&quot;&gt;&lt;/a&gt;1.平台&lt;/h2&gt;&lt;p&gt;J</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="https://blog.quickso.cn/tags/Java/"/>
    
    <category term="开发环境" scheme="https://blog.quickso.cn/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>使用Cloudflare设置网站301重定向</title>
    <link href="https://blog.quickso.cn/2021/03/01/%E4%BD%BF%E7%94%A8Cloudflare%E8%AE%BE%E7%BD%AE%E7%BD%91%E7%AB%99301%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    <id>https://blog.quickso.cn/2021/03/01/%E4%BD%BF%E7%94%A8Cloudflare%E8%AE%BE%E7%BD%AE%E7%BD%91%E7%AB%99301%E9%87%8D%E5%AE%9A%E5%90%91/</id>
    <published>2021-03-01T04:39:53.000Z</published>
    <updated>2021-03-01T04:44:01.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>301 是 HTTP 协议中的一个状态码，表示该网页已经永久迁移到新位置。</p><p>我们经常在更换域名时，使用 301 重定向来把旧域名永久转移到新域名上去，它可以同时把我们旧域名的流量和权重同时转移到新域名上去，对搜索引擎比较友好，避免了更换域名所带来的流量丢失。</p><h2 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h2><ul><li>更换域名，将旧域名指向新域名；</li><li>网址规范化，将a.com、<a href="http://www.a.com、blog.a.com等访问地址全部指向a.com一个地址,集中流量和权重;/">www.a.com、blog.a.com等访问地址全部指向a.com一个地址，集中流量和权重；</a></li><li>将指向过期、无效网页的链接重定向至正确地址；</li><li>http重定向到https；</li><li>中文域名指向英文域名。</li></ul><h2 id="使用-Cloudflare-进行重定向-下面介绍下如何使用-Cloudflare-的页面规则对网站进行-301-重定向。"><a href="#使用-Cloudflare-进行重定向-下面介绍下如何使用-Cloudflare-的页面规则对网站进行-301-重定向。" class="headerlink" title="使用 Cloudflare 进行重定向 下面介绍下如何使用 Cloudflare 的页面规则对网站进行 301 重定向。"></a><strong>使用 Cloudflare 进行重定向 下面介绍下如何使用 Cloudflare 的页面规则对网站进行 301 重定向。</strong></h2><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>登录 <a href="https://www.cloudflare.com/">Cloudflare</a> 的控制面板，进入 “Page Rules” 页面，创建一条页面规则。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210301124114.png"></p><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>添加规则 “Forwarding URL”，类型 “301 – Permanent Redirect”</p><p>1.统一跳转，将<code>abc.com</code>的所有页面都无差别的重定向至<code>newsite.com</code>首页。</p><p><strong>写法：</strong><code>abc.com/*</code> 301 <code>newsite.com</code></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210301124147.png"></p><p>2.对应跳转，即 <code>abc.com/b.html</code> 重定向至 <code>newsite.com/b.html</code>，<code>abc.com/about.html </code>重定向至 <code>newsite.com/about.html</code>，保持原网址结构。</p><p><strong>写法：</strong><code>abc.com/*</code> 301 <code>newsite.com/$1</code></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210301124224.png"></p><p>3.HTTP 重定向至 HTTPS</p><p>Cloudflare 提供了 HTTPS 重定向选项，直接选择 “Always Use HTTPS” 即可。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210301124248.png"></p><p>官方文档：<a href="https://support.cloudflare.com/hc/en-us/articles/218411427#redirects">Forwarding (URL Redirection)</a></p><h2 id="301重定向检测"><a href="#301重定向检测" class="headerlink" title="301重定向检测"></a>301重定向检测</h2><p><strong>设置好我们可以通过检测工具查看重定向结果。</strong></p><ul><li><a href="https://httpstatus.io/">Bulk URL HTTP Status Code, Header &amp; Redirect Checker</a></li><li><a href="http://tool.chinaz.com/pagestatus/">HTTP状态查询 – 站长工具</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210301124321.png"></p><h2 id="301-和-302-的区别"><a href="#301-和-302-的区别" class="headerlink" title="301 和 302 的区别"></a>301 和 302 的区别</h2><p><strong>重定向选项中除了 301 还有一个 302 重定向，但是不建议使用。</strong></p><p><strong>301：永久重定向（推荐）</strong></p><ul><li>永久转移地址，不会恢复原地址；</li><li>对搜素引擎友好，可以转移流量和权重。</li></ul><p><strong>302：临时重定向（不推荐）</strong></p><ul><li>临时性转移，会恢复原地址；</li><li>影响搜索引擎优化。</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>当然，进行301重定向还可以通过更改 .htaccess 文件等方法，也很方便。如果正好在使用 Cloudflare 的话，可以通过本文的方法进行重定向，使用 Cloudflare 提供好的选项直接设置，不涉及任何代码。</p><p>via.<a href="https://go2think.com/301-redirect-by-cloudflare/">https://go2think.com/301-redirect-by-cloudflare/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;301 是 HTTP 协议中的一个状态码，表示该网页已经永久迁移到新位置。&lt;/p&gt;
&lt;p&gt;我们经常在更换域名时，使用 301 重定向来把旧域</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="301" scheme="https://blog.quickso.cn/tags/301/"/>
    
    <category term="Cloudflare" scheme="https://blog.quickso.cn/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>利用DockerHub仓库搭建无限容量不限速的网盘</title>
    <link href="https://blog.quickso.cn/2021/02/26/%E5%88%A9%E7%94%A8DockerHub%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E4%B8%8D%E9%99%90%E9%80%9F%E7%9A%84%E7%BD%91%E7%9B%98/"/>
    <id>https://blog.quickso.cn/2021/02/26/%E5%88%A9%E7%94%A8DockerHub%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E4%B8%8D%E9%99%90%E9%80%9F%E7%9A%84%E7%BD%91%E7%9B%98/</id>
    <published>2021-02-26T03:11:44.000Z</published>
    <updated>2021-02-26T03:43:44.839Z</updated>
    
    <content type="html"><![CDATA[<p>很多服务商都提供了免费的Docker容器镜像服务，国内的也有一些，比如，阿里云，华为云等。今天要介绍的就是利用免费的Docker容器镜像搭建一个无限容量不限速的网盘。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111300.png"></p><p><strong>友情提示：本文演示阿里云容器镜像服务搭建，请大家不要乱用资源！造成任何后果与本博无关！谢谢大家理解！</strong></p><h4 id="1、项目介绍"><a href="#1、项目介绍" class="headerlink" title="1、项目介绍"></a>1、项目介绍</h4><p>1）<a href="https://github.com/xausky/DockerRegisterCloud">https://github.com/xausky/DockerRegisterCloud</a></p><p>2）客户端：<a href="https://github.com/xausky/DockerRegisterCloud/releases">https://github.com/xausky/DockerRegisterCloud/releases</a></p><p>3）基本功能</p><ul><li>命令行工具基本功能，登录，文件列表，上传文件，下载文件</li><li>直接下载，在支持的仓库服务中可以直接在浏览器中实现下载而无需客户端</li><li>命令行功能优化，重命名文件以及删除文件</li><li>GUI 客户端，预计包括 Linux, Windows, Mac OS, Android, iOS，本项目使用 Dart 编写，GUI 客户端将使用 Flutter，期待热心小伙伴的帮助。</li><li>直接下载支持到仓库可以用 Web 版客户端复制永久直链，可用于图床等</li></ul><p>4）支持仓库</p><table><thead><tr><th align="center">服务提供商</th><th align="center">无需成本</th><th align="center">直接下载支持</th></tr></thead><tbody><tr><td align="center">Docker Register</td><td align="center">✖️</td><td align="center">✖️</td></tr><tr><td align="center">Docker Hub</td><td align="center">✔️</td><td align="center">✔️</td></tr><tr><td align="center">百度智能云</td><td align="center">✔️</td><td align="center">✖️</td></tr><tr><td align="center">阿里云</td><td align="center">✔️</td><td align="center">✔️</td></tr><tr><td align="center">华为云</td><td align="center">✔️</td><td align="center">✔️</td></tr></tbody></table><p>本项目编写仅基于 Docker Registry HTTP API V2 未曾尝试破解或者逆向任何公司服务，用户存储的内容以及隐私性和安全性由用户自己负责以及仓库服务提供商保证，本项目未曾也没有能力负责和保证。</p><h4 id="2、准备工作"><a href="#2、准备工作" class="headerlink" title="2、准备工作"></a>2、准备工作</h4><p>1）阿里云账号</p><p>2）本地需要下载客户端</p><h4 id="3、部署"><a href="#3、部署" class="headerlink" title="3、部署"></a>3、部署</h4><p>本文以阿里云作为演示~~~~</p><p>1）容器镜像服务</p><p>网址：<a href="https://cr.console.aliyun.com/">https://cr.console.aliyun.com</a></p><p>2）开通阿里云免费的Docker存储</p><p>3）首先要设置登陆密码！这个密码后面会使用到！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111444.png"></p><p>4）按照提示注册一个命名空间！(选择公开)</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111532.png"></p><p>5）新建仓库选择我们新建的命名空间！（选择公开）代码源选择本地仓库！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111610.png"></p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111809.png"></p><p>6）新建成功后，点击管理，进入后，复制公网地址，后面我们要使用！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226111854.png"></p><p>7）运行软件，仓库地址粘贴上面复制的公网地址，然后输入用户名 和密码！</p><p>特别提醒：这里的密码不是阿里云的密码，是在第一步设置的密码，请注意！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226112613.png"></p><p>8）然后就可以愉快的使用啦！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226112710.png"></p><h4 id="4-其他说明"><a href="#4-其他说明" class="headerlink" title="4.其他说明"></a>4.其他说明</h4><p>目前阿里云下载的文件名称都是data，需要自己手动修改文件名以及后缀！</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210226112821.png"></p><h4 id="演示下载"><a href="#演示下载" class="headerlink" title="演示下载"></a>演示下载</h4><p>【<a href="http://aliregistry.oss-cn-hangzhou.aliyuncs.com/docker/registry/v2/blobs/sha256/ea/eac60399d17ecc55a23d63acc46a99027b507ef6d1b45069270cde8721d3d862/data?Expires=1614312803&OSSAccessKeyId=LTAI4FsQYu7kG56rtBsQAHfw&Signature=ZAaq+swhuxHrc3b6UG1URFIOkg8=&x-oss-traffic-limit=139056131">点击下载</a>】</p><h4 id="5、最后"><a href="#5、最后" class="headerlink" title="5、最后"></a>5、最后</h4><p>1）客户端上传文件后，复制链接后，就可以共享链接地址，让他人方便的在浏览器里点击链接地址，直接下载了。这样你就有了一个不限速，不限容量的Docker网盘！</p><p><strong>注意</strong>：阿里云下载的文件名称都是data，需要自己手动修改文件名以及后缀！</p><p>2）免费仓库</p><p><strong>国内</strong></p><ul><li>阿里云：<a href="https://cr.console.aliyun.com/">https://cr.console.aliyun.com</a></li><li>华为云：<a href="https://console.huaweicloud.com/swr">https://console.huaweicloud.com/swr</a></li></ul><p><strong>国外</strong></p><ul><li>Docker Hub：<a href="https://hub.docker.com/">https://hub.docker.com/</a></li></ul><p><strong>消息来源</strong></p><ul><li>本文消息来自**<a href="https://www.52pojie.cn/thread-1287146-1-1.html">吾爱破解</a>**</li></ul><p>友情提醒：<strong>白嫖虽好，不要过分！！！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多服务商都提供了免费的Docker容器镜像服务，国内的也有一些，比如，阿里云，华为云等。今天要介绍的就是利用免费的Docker容器镜像搭建一个无限容量不限速的网盘。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/muzihuan</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Docker" scheme="https://blog.quickso.cn/tags/Docker/"/>
    
    <category term="网盘" scheme="https://blog.quickso.cn/tags/%E7%BD%91%E7%9B%98/"/>
    
    <category term="白嫖" scheme="https://blog.quickso.cn/tags/%E7%99%BD%E5%AB%96/"/>
    
  </entry>
  
  <entry>
    <title>一键配置VScode的C语言开发环境</title>
    <link href="https://blog.quickso.cn/2021/02/24/%E4%B8%80%E9%94%AE%E9%85%8D%E7%BD%AEVScode%E7%9A%84C%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://blog.quickso.cn/2021/02/24/%E4%B8%80%E9%94%AE%E9%85%8D%E7%BD%AEVScode%E7%9A%84C%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2021-02-24T03:00:00.000Z</published>
    <updated>2021-02-24T03:10:15.539Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为学习需要，得整一个C语言的开发平台。打开百度一顿搜。嗯，推荐使用宇宙第一IDE——VS Code！随便敲一段代码，按下F5本来以为会跳出“Hello World”，结果。。。乖乖，我这程序运行出来个json文件！666!<br>再定睛仔细以看，原来如此，还是要配置C语言开发环境的嘛。 </p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224110119.png"></p><p>这不看不知道，一看得吓尿。<br>啥是编译器？？？啥是环境变量？？？我写C语言还要用编译器？？？<br>这个MinGW和GCC有什么关系啊？这个tasks和launch是干啥事的呀？这给我还推荐插件装了咋也没用呢？<br>好嘛，我就想写个C语言，本以为装个编辑器就完事了，咋还整出这么多乱七八糟的玩意。告辞！<br>就这样，VS code劝退了诸多萌新，让他们与全宇宙数一数二好用的工具擦肩而过。</p><p>那有没有办法一键配置开发环境呢？<br>答案肯定是：<strong>有！</strong></p><p>B站UP主<a href="https://space.bilibili.com/12263994">SDchao</a>，就开发了一款一键配置C语言开发环境的工具。</p><p>下载链接：<a href="https://github.com/SDchao/AutoVsCEnv_WPF">点我直达</a></p><p>压缩包下载好了，<strong>先解压！右键，以管理员权限</strong>运行那个<strong>又粗又大的exe文件</strong>，你将获得至高无上的快乐。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224110250.png"></p><p>咳咳，你还是得选择一下<strong>项目文件夹</strong>。说人话就是你以后写的c或者cpp文件都要放在这个文件夹和它的子文件夹里面。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224110312.png"></p><p>点击确认，配置文件、编译器、环境变量、编辑器插件……全部给你一一整好！完事了还帮你开了VS code。<br>新建文件，写下代码，F5，完美运行。（如果不行的话关掉重启下VS code）</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224110334.png"></p><p>那一刻，泪流了下来 ~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近因为学习需要，得整一个C语言的开发平台。打开百度一顿搜。嗯，推荐使用宇宙第一IDE——VS Code！随便敲一段代码，按下F5本来以为会跳出“Hello World”，结果。。。乖乖，我这程序运行出来个json文件！666!&lt;br&gt;再定睛仔细以看，原来如此，还是要配置C</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VsCode" scheme="https://blog.quickso.cn/tags/VsCode/"/>
    
    <category term="C" scheme="https://blog.quickso.cn/tags/C/"/>
    
    <category term="C++" scheme="https://blog.quickso.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>VSCode配置Python开发环境</title>
    <link href="https://blog.quickso.cn/2021/02/24/VSCode%E9%85%8D%E7%BD%AEPython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://blog.quickso.cn/2021/02/24/VSCode%E9%85%8D%E7%BD%AEPython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2021-02-24T02:50:55.000Z</published>
    <updated>2021-02-24T02:58:44.682Z</updated>
    
    <content type="html"><![CDATA[<p>VSCode 是一个相当优秀的编辑器，具备开源、跨平台、模块化、插件丰富、启动时间快、颜值高、可高度定制等等优秀的特质，不愧是微软爸爸的私生子。不管是用来写 css,php,c/c++ 都是不错的选择，用 VSCode 来编写 Python，也是相当的好用的。<br>所以，今天我们就来讲讲，怎么在 VScode 上配置 Python 开发环境。</p><h2 id="程序准备"><a href="#程序准备" class="headerlink" title="程序准备"></a>程序准备</h2><p>首先，我们必须先下载好 Python 的安装包和 VSCode 的安装包。<br>我之前 VS2019 已经自动安装好了 Python3，这里就不再进行安装了。<br>下载地址如下：</p><p><a href="https://www.python.org/downloads/">Python下载</a></p><p><a href="https://code.visualstudio.com/">VsCode下载</a></p><p>大家选择适合自己的版本下载即可。<br>我是 Windows10 64 位的操作系统，所以我 Python 下的是 64 位的最新版，VSCode 下载的是 64 位的最新版。</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h3><p>首先，我们安装 Python 到自己的电脑里。切记，一定要记得勾选<strong>添加环境变量</strong>。<br>安装过程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224105522.gif"></p><p>然后，我们需要检查下 python 是否安装成功。<br>检查方法如下：</p><ol><li>打开 cmd，输入 <code>python</code>，点击回车。</li><li>输入 <code>import this</code>，欣赏下 python 之禅。</li><li>退出，输入 <code>pip list</code>，检查第三方的包正确不。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224105602.gif"></p><h3 id="安装第三方包"><a href="#安装第三方包" class="headerlink" title="安装第三方包"></a>安装第三方包</h3><p>通过 python 自带的 pip 工具，安装两个一会儿配置 VScode 需要的包。<br>flake8 和 yapf<br>flake8 会检查编写代码时的不规范的地方和语法错误。<br>yapf 是一个代码格式化工具，可以一键美化代码。<br>安装过程如下：</p><ol><li>在 cmd 输入 <code>pip list</code> 检查是否已存在需要的包。</li><li>输入 <code>pip install flake8</code> 下载安装 flake8。</li><li>输入 <code>pip install yapf</code> 下载安装 yapf（检测代码规范性）。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224105637.gif"></p><h2 id="配置-VSCode"><a href="#配置-VSCode" class="headerlink" title="配置 VSCode"></a>配置 VSCode</h2><h3 id="安装-Python-插件"><a href="#安装-Python-插件" class="headerlink" title="安装 Python 插件"></a>安装 Python 插件</h3><ol><li>打开 VScode，按下快捷键 Ctrl+Shift+X，进入插件管理页面。</li><li>在搜索栏输入 python。</li><li>选择插件，点击安装。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210224105713.gif"></p><h3 id="创建项目，配置工作区域"><a href="#创建项目，配置工作区域" class="headerlink" title="创建项目，配置工作区域"></a>创建项目，配置工作区域</h3><ol><li>创建一个本地文件夹，作为项目文件。</li><li>在项目文件中，新建文件夹<code>vscode</code>，新建文件 <code>settings.json</code>。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;files.defaultLanguage&quot;</span>: <span class="hljs-string">&quot;python&quot;</span>,<br>    <span class="hljs-attr">&quot;python.linting.flake8Enabled&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;python.formatting.provider&quot;</span>: <span class="hljs-string">&quot;yapf&quot;</span>,<br>    <span class="hljs-attr">&quot;python.linting.flake8Args&quot;</span>: [<br>        <span class="hljs-string">&quot;--max-line-length=248&quot;</span><br>    ],<br>    <span class="hljs-attr">&quot;python.linting.pylintEnabled&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><p>点击 VSCode 侧边栏中的<code>Run</code>，选择添加<code>launch.json</code>，选择<code>Python File</code>。</p><ol><li>写个 Hello World 测试，按 F5 进行调试。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">print(<span class="hljs-string">&quot;Hello VScode&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="配置完成"><a href="#配置完成" class="headerlink" title="配置完成"></a>配置完成</h2><p>到这里，整个 VSCode 编写 Python 的开发环境就已经全部配置完成了。</p><p>代码格式化工具 yapf：<br>在 VSCode 中按下快捷键<code>Alt+Shift+F</code>即可自动格式化代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;VSCode 是一个相当优秀的编辑器，具备开源、跨平台、模块化、插件丰富、启动时间快、颜值高、可高度定制等等优秀的特质，不愧是微软爸爸的私生子。不管是用来写 css,php,c/c++ 都是不错的选择，用 VSCode 来编写 Python，也是相当的好用的。&lt;br&gt;所以，</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VsCode" scheme="https://blog.quickso.cn/tags/VsCode/"/>
    
    <category term="Python" scheme="https://blog.quickso.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>为博客添加访问提醒</title>
    <link href="https://blog.quickso.cn/2021/02/24/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E6%8F%90%E9%86%92/"/>
    <id>https://blog.quickso.cn/2021/02/24/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E6%8F%90%E9%86%92/</id>
    <published>2021-02-23T16:04:50.000Z</published>
    <updated>2021-02-23T16:09:34.545Z</updated>
    
    <content type="html"><![CDATA[<p>在网页底部自定义中添加 如果你网站开启了pjax,可能还会有点小bug,问题不大</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 客户端信息 --&gt;<br>    &lt;div id=<span class="hljs-string">&quot;fps&quot;</span> style=<span class="hljs-string">&quot;z-index:5;position:fixed;bottom:3px;left:3px;color:#2196F3;font-size:10px;&quot;</span>&gt;&lt;/div&gt;<br>    &lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span> src=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/kaliisra/myblogstatic/kehuduan-js/fetch.min.js&quot;</span>&gt;&lt;/script&gt;<br>    &lt;script src=<span class="hljs-string">&quot;https://cdn.gmit.vip/layer/3.1.1/layer.js&quot;</span> type=<span class="hljs-string">&quot;text/javascript&quot;</span> charset=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;<br>    &lt;script&gt;<br>    <span class="hljs-comment">/*网站打开提醒代码开始*/</span><br>    $(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-comment">/*getCookie(&#x27;msg&#x27;) !=*/</span> <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">var</span> t = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;a&quot;</span>);<br>            t.href = <span class="hljs-built_in">document</span>.referrer;<br>            <span class="hljs-keyword">var</span> msgTitle = t.hostname;<br>            <span class="hljs-keyword">var</span> name = t.hostname.split(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;&quot;</span> !== <span class="hljs-built_in">document</span>.referrer)&#123;<br>                <span class="hljs-keyword">switch</span> (name) &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;bing&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;必应搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;baidu&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;百度搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;so&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;360搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;google&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;谷歌搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;sm&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;神马搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;sogou&#x27;</span>:<br>                        msgTitle = <span class="hljs-string">&#x27;搜狗搜索&#x27;</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">default</span>:<br>                        msgTitle =  t.hostname;<br>                &#125;;<br>            &#125;;<br>            <span class="hljs-keyword">var</span> time = (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>).getHours();<br>            <span class="hljs-keyword">var</span> msg = <span class="hljs-string">&#x27;&#x27;</span>;<br>            <span class="hljs-number">23</span> &lt; time || time &lt;= <span class="hljs-number">5</span> ? msg = <span class="hljs-string">&quot;你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？&quot;</span>:<br>            <span class="hljs-number">5</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">7</span> ? msg = <span class="hljs-string">&quot;早上好！一日之计在于晨，美好的一天就要开始了！&quot;</span>:<br>            <span class="hljs-number">7</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">11</span> ? msg = <span class="hljs-string">&quot;上午好！工作顺利嘛，不要久坐，多起来走动走动哦！&quot;</span>:<br>            <span class="hljs-number">11</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">14</span> ? msg = <span class="hljs-string">&quot;中午了，工作了一个上午，现在是午餐时间！&quot;</span>:<br>            <span class="hljs-number">14</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">17</span> ? msg = <span class="hljs-string">&quot;午后很容易犯困呢，今天的运动目标完成了吗？&quot;</span>:<br>            <span class="hljs-number">17</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">19</span> ? msg = <span class="hljs-string">&quot;傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~&quot;</span>:<br>            <span class="hljs-number">19</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">21</span> ? msg = <span class="hljs-string">&quot;晚上好，今天过得怎么样？&quot;</span>:<br>            <span class="hljs-number">21</span>&lt; time &amp;&amp; time &lt;= <span class="hljs-number">23</span> &amp;&amp; (msg = <span class="hljs-string">&quot;已经这么晚了呀，早点休息吧，晚安~&quot;</span>);<br>            $.ajax(&#123;<br>                type:<span class="hljs-string">&quot;get&quot;</span>,<br>                url:<span class="hljs-string">&quot;https://open.gmit.vip/web/api/UserInfo/&quot;</span>,<br>                <span class="hljs-keyword">async</span>:<span class="hljs-literal">true</span>,<br>                success:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;<br>                    <span class="hljs-built_in">window</span>.info = data;<br>                    layer.msg(<span class="hljs-string">&quot;Hi~ 来自&quot;</span>+ data.data.location + <span class="hljs-string">&#x27;~&lt;br/&gt;通过 &#x27;</span>+msgTitle+<span class="hljs-string">&#x27; 进来的朋友！&lt;br/&gt;使用 &#x27;</span>+ data.data.os +<span class="hljs-string">&quot;&lt;br/&gt;&quot;</span>+ data.data.browser +<span class="hljs-string">&#x27; 访问本站！&#x27;</span> + <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span> + msg);<br>                    <span class="hljs-keyword">var</span> showFPS = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>                        <span class="hljs-keyword">var</span> requestAnimationFrame =<br>                            <span class="hljs-built_in">window</span>.requestAnimationFrame ||<br>                            <span class="hljs-built_in">window</span>.webkitRequestAnimationFrame ||<br>                            <span class="hljs-built_in">window</span>.mozRequestAnimationFrame ||<br>                            <span class="hljs-built_in">window</span>.oRequestAnimationFrame ||<br>                            <span class="hljs-built_in">window</span>.msRequestAnimationFrame ||<br>                            <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) </span>&#123;<br>                                <span class="hljs-built_in">window</span>.setTimeout(callback, <span class="hljs-number">1000</span>/<span class="hljs-number">60</span>);<br>                            &#125;;<br>                        <span class="hljs-keyword">var</span> e,pe,pid,fps,last,offset,step,appendFps;<br> <br>                        fps = <span class="hljs-number">0</span>;<br>                        last = <span class="hljs-built_in">Date</span>.now();<br>                        step = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>                            offset = <span class="hljs-built_in">Date</span>.now() - last;<br>                            fps += <span class="hljs-number">1</span>;<br>                            <span class="hljs-keyword">if</span>( offset &gt;= <span class="hljs-number">1000</span> )&#123;<br>                            last += offset;<br>                            appendFps(fps);<br>                            fps = <span class="hljs-number">0</span>;<br>                            &#125;;<br>                            requestAnimationFrame( step );<br>                        &#125;;<br>                        appendFps = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">fps</span>)</span>&#123;<br>                            <span class="hljs-keyword">var</span> settings = &#123;<br>                                timeout: <span class="hljs-number">5000</span>,<br>                                logError: <span class="hljs-literal">true</span><br>                            &#125;;<br>                            $(<span class="hljs-string">&#x27;#fps&#x27;</span>).html(<span class="hljs-string">&#x27;&lt;span style=&quot;float:left;&quot;&gt;&#x27;</span>+fps+<span class="hljs-string">&#x27;FPS&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;float:left&quot;&gt;&#x27;</span>+<span class="hljs-built_in">window</span>.info.data.os+<span class="hljs-string">&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;float:left;margin-top:1px;&quot;&gt;&#x27;</span>+<span class="hljs-built_in">window</span>.info.data.browser+<span class="hljs-string">&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;float:left;margin-top:1px;&quot;&gt;&#x27;</span>+<span class="hljs-built_in">window</span>.info.data.location+<span class="hljs-string">&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;float:left;margin-top:1px;&quot;&gt;&lt;/span&gt;&#x27;</span>);<br>                        &#125;;<br>                        step();<br>                    &#125;)();<br>                &#125;<br>            &#125;);<br>        &#125;;<br>    &#125;);<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>如果不显示，在头部或者脚部添加以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在网页底部自定义中添加 如果你网站开启了pjax,可能还会有点小bug,问题不大&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="代码" scheme="https://blog.quickso.cn/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="Hexo" scheme="https://blog.quickso.cn/tags/Hexo/"/>
    
    <category term="博客" scheme="https://blog.quickso.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Armbian-N1手动安装omv</title>
    <link href="https://blog.quickso.cn/2021/02/23/Armbian-N1%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85omv/"/>
    <id>https://blog.quickso.cn/2021/02/23/Armbian-N1%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85omv/</id>
    <published>2021-02-23T04:49:59.000Z</published>
    <updated>2021-02-23T04:53:34.362Z</updated>
    
    <content type="html"><![CDATA[<p>本来是想用 <code>armbian-config</code> 来自动安装 <code>OpenMediaVault</code> 的，但是安装的时候总是自动退出，无奈，只能手动安装了。</p><h3 id="1-添加-OMV-软件源"><a href="#1-添加-OMV-软件源" class="headerlink" title="1. 添加 OMV 软件源"></a>1. 添加 OMV 软件源</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;deb http://packages.openmediavault.org/public arrakis main&quot;</span> &gt; /etc/apt/sources.<span class="hljs-keyword">list</span>.d/openmediavault.<span class="hljs-keyword">list</span>  <br>apt-key adv --recv-keys --keyserver keyserver.ubuntu.com <span class="hljs-number">7E7</span>A6C592EF35D13 <span class="hljs-number">24863</span>F0C716B980B<br>apt update<br></code></pre></td></tr></table></figure><h3 id="2-设置环境变量"><a href="#2-设置环境变量" class="headerlink" title="2. 设置环境变量"></a>2. 设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> LANG=C <br><span class="hljs-built_in">export</span> DEBIAN_FRONTEND=noninteractive <br><span class="hljs-built_in">export</span> APT_LISTCHANGES_FRONTEND=none<br></code></pre></td></tr></table></figure><h3 id="3-安装-OMV"><a href="#3-安装-OMV" class="headerlink" title="3. 安装 OMV"></a>3. 安装 OMV</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs swift">apt install openmediavault<span class="hljs-operator">-</span>keyring <span class="hljs-keyword">postfix</span> <br>apt install openmediavault<br></code></pre></td></tr></table></figure><h3 id="4-初始化：快完成时有确认提示，如下："><a href="#4-初始化：快完成时有确认提示，如下：" class="headerlink" title="4. 初始化：快完成时有确认提示，如下："></a>4. 初始化：快完成时有确认提示，如下：</h3><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210223125241.png"></p><p>确认后，<code>omv-initsystem</code> 进行初始化</p><h3 id="5-安装完成后，输入http-ip打开登陆页面，默认账号密码如下，"><a href="#5-安装完成后，输入http-ip打开登陆页面，默认账号密码如下，" class="headerlink" title="5. 安装完成后，输入http://ip打开登陆页面，默认账号密码如下，"></a>5. 安装完成后，输入<code>http://ip</code>打开登陆页面，默认账号密码如下，</h3><ul><li>账号：<code>admin</code></li><li>密码：<code>openmediavault</code></li></ul><h3 id="6-安装扩展插件"><a href="#6-安装扩展插件" class="headerlink" title="6. 安装扩展插件"></a>6. 安装扩展插件</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp">wget http:<span class="hljs-comment">//omv-extras.org/openmediavault-omvextrasorg_latest_all4.deb</span><br>dpkg -i openmediavault-omvextrasorg_latest_all4.deb<br>apt-<span class="hljs-keyword">get</span> update<br></code></pre></td></tr></table></figure><p>这样就安装完成了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本来是想用 &lt;code&gt;armbian-config&lt;/code&gt; 来自动安装 &lt;code&gt;OpenMediaVault&lt;/code&gt; 的，但是安装的时候总是自动退出，无奈，只能手动安装了。&lt;/p&gt;
&lt;h3 id=&quot;1-添加-OMV-软件源&quot;&gt;&lt;a href=&quot;#1-添加-</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://blog.quickso.cn/tags/Linux/"/>
    
    <category term="N1" scheme="https://blog.quickso.cn/tags/N1/"/>
    
    <category term="Armbian" scheme="https://blog.quickso.cn/tags/Armbian/"/>
    
    <category term="OpenMediaVault" scheme="https://blog.quickso.cn/tags/OpenMediaVault/"/>
    
  </entry>
  
  <entry>
    <title>钉钉内网穿透，免费高速的内网穿透工具</title>
    <link href="https://blog.quickso.cn/2021/02/21/%E9%92%89%E9%92%89%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%85%8D%E8%B4%B9%E9%AB%98%E9%80%9F%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
    <id>https://blog.quickso.cn/2021/02/21/%E9%92%89%E9%92%89%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%85%8D%E8%B4%B9%E9%AB%98%E9%80%9F%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/</id>
    <published>2021-02-21T10:57:06.000Z</published>
    <updated>2021-02-21T11:09:28.453Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是内网穿透？"><a href="#什么是内网穿透？" class="headerlink" title="什么是内网穿透？"></a>什么是内网穿透？</h4><p>就是让你个人电脑内建立的网站，在外网可以访问，例如你的手机，其他电脑等。</p><p>例如你在电脑部署了一个web服务器，你在浏览器访问127.0.0.1可以打开这个网站，但是你用手机访问127.0.0.1却打不开。那是因为你这个ip地址不是公网ip，只能在你的电脑访问，你需要将127.0.0.1暴露出去，即需要有一个公网ip，别人访问公网ip即可访问网站。</p><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210221185812.png"></p><p>假设你的电脑是A，你的手机是B，你有一台拥有公网ip的服务器C，显然B想知道A里面有什么，是有一堵墙阻挡住了，这是防火墙。我们的目的就是绕过防火墙，即需要C来协助。</p><p>A可以和C进行信息交换，因为C是公网的，大家可以访问C，所以B也可以和C进行信息交换，如果B想和A联系，B先和C联系，C再和A联系，那么B就可以间接联系到A了，即C作为A和B的中介，也称为代理。</p><h4 id="如何实现内网穿透？"><a href="#如何实现内网穿透？" class="headerlink" title="如何实现内网穿透？"></a>如何实现内网穿透？</h4><p>市面上的内网穿透软件、工具很多，收费的有花生壳、向日葵、免费的有frp、ngrok，其中frp、ngrok是需要一些搭建基础的，对小白不友好啊，但是钉钉把ngrok进行了封装，小白也可以上手，下面给大家介绍钉钉这款内网穿透工具如何使用</p><h4 id="内网穿透之HTTP穿透"><a href="#内网穿透之HTTP穿透" class="headerlink" title="内网穿透之HTTP穿透"></a>内网穿透之HTTP穿透</h4><p>鉴于很多开发者在临时体验开发时往往没有公网域名或者公网IP，本工具提供了一个公网代理服务，目的是方便开发测试。</p><p>本工具不保证稳定性，仅适用于开发测试阶段，禁止当作公网域名使用。如线上应用使用本工具造成稳定性问题，后果由自己承担。如使用本工具传播违法不良信息，钉钉将追究法律责任。</p><h4 id="内网穿透示意图"><a href="#内网穿透示意图" class="headerlink" title="内网穿透示意图"></a>内网穿透示意图</h4><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210221190114.png"></p><h4 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h4><p>案例一：ISV三方企业小程序的回调地址必须是公网域名或IP，对于大部分开发者来说，开发者无法在本地调试远程代码，对于回调URL校验不通过之类的问题无法追踪，只能不断远程部署查看log日志来调试修改。</p><p>案例二：企业通讯录同步过程中需要注册一个公网域名(或IP)的回调地址，用来接收钉钉上的企业通讯录信息变更。</p><p>内网穿透工具可以实现将一个公网域名映射到本地的localhost域名</p><p>github地址：<a href="https://github.com/open-dingtalk/pierced">https://github.com/open-dingtalk/pierced</a></p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><h6 id="一、下载程序"><a href="#一、下载程序" class="headerlink" title="一、下载程序"></a>一、下载程序</h6><p>从上面github地址里下载程序，或者直接用<code>git clone</code></p><p>这里以Linux系统为例</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/open-dingtalk/</span>pierced.git<br>cd pierced<span class="hljs-regexp">/linux/</span><br></code></pre></td></tr></table></figure><h6 id="二、启动程序"><a href="#二、启动程序" class="headerlink" title="二、启动程序"></a>二、启动程序</h6><p>Linux、Mac下用系统终端，Windows下要用CMD，Powershell不知为何运行不了。</p><p>执行<code>./ding -config=./ding.cfg -subdomain=域名前缀 端口</code>，这里以Linux系统为例</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">chmod +x ./ding<br>./ding <span class="hljs-attribute">-config</span>=./ding.cfg <span class="hljs-attribute">-subdomain</span>=huange 8080<br></code></pre></td></tr></table></figure><p>参数说明：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-config</td><td>内网穿透的配置文件，按命令照示例固定为钉钉提供的./ding.cfg，无需修改</td></tr><tr><td>-subdomain</td><td>您需要使用的域名前缀，该前缀将会匹配到“vaiwan.com”前面，例如你的subdomain是abcde，启动工具后会将abcde.vaiwan.com映射到本地。</td></tr><tr><td>端口</td><td>您需要代理的本地服务http-server端口，例如你本地端口为8080等</td></tr></tbody></table><h6 id="三、启动成功"><a href="#三、启动成功" class="headerlink" title="三、启动成功"></a>三、启动成功</h6><p><img src="https://cdn.jsdelivr.net/gh/muzihuaner/huancdn/img/20210221190645.png"></p><p>启动完客户端后，你访问<a href="http://abcde.vaiwan.com/xxxxx%E9%83%BD%E4%BC%9A%E6%98%A0%E5%B0%84%E5%88%B0">http://abcde.vaiwan.com/xxxxx都会映射到</a> <a href="http://127.0.0.1:8080/xxxxx%E3%80%82">http://127.0.0.1:8080/xxxxx。</a></p><h6 id="四、注意事项"><a href="#四、注意事项" class="headerlink" title="四、注意事项"></a>四、注意事项</h6><ul><li>需要访问的域名是<a href="http://abcde.vaiwan.com/xxxxx">http://abcde.vaiwan.com/xxxxx</a> 而不是<a href="http://abcde.vaiwan.com:8080/xxxxx">http://abcde.vaiwan.com:8080/xxxxx</a></li><li>启动命令的subdomain参数有可能被别人占用，尽量不要用常用字符，可以用自己公司名的拼音，例如：alibaba、dingding等</li><li>可以在本地起个http-server服务，放置一个index.html文件，然后访问<a href="http://abcde.vaiwan.com/index.html%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B">http://abcde.vaiwan.com/index.html测试一下</a></li></ul><p>官方文档：<a href="https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app">点击进入</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;什么是内网穿透？&quot;&gt;&lt;a href=&quot;#什么是内网穿透？&quot; class=&quot;headerlink&quot; title=&quot;什么是内网穿透？&quot;&gt;&lt;/a&gt;什么是内网穿透？&lt;/h4&gt;&lt;p&gt;就是让你个人电脑内建立的网站，在外网可以访问，例如你的手机，其他电脑等。&lt;/p&gt;
&lt;p&gt;例如</summary>
      
    
    
    
    <category term="工具" scheme="https://blog.quickso.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="内网穿透" scheme="https://blog.quickso.cn/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    <category term="免费" scheme="https://blog.quickso.cn/tags/%E5%85%8D%E8%B4%B9/"/>
    
  </entry>
  
  <entry>
    <title>使用服务器24小时不间断直播电影电视剧</title>
    <link href="https://blog.quickso.cn/2021/02/21/%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A824%E5%B0%8F%E6%97%B6%E4%B8%8D%E9%97%B4%E6%96%AD%E7%9B%B4%E6%92%AD%E7%94%B5%E5%BD%B1%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    <id>https://blog.quickso.cn/2021/02/21/%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A824%E5%B0%8F%E6%97%B6%E4%B8%8D%E9%97%B4%E6%96%AD%E7%9B%B4%E6%92%AD%E7%94%B5%E5%BD%B1%E7%94%B5%E8%A7%86%E5%89%A7/</id>
    <published>2021-02-21T07:26:09.000Z</published>
    <updated>2021-02-21T07:29:28.697Z</updated>
    
    <content type="html"><![CDATA[<p>在现在主流的平台上面有很多直播电影，电视剧的房间。很多直播平台也有这方面影视的版权。大部分新人还是使用obs+potplayer来直播。这显然不符合技术宅的解决方法，需要开机个windows主机？技术宅：NO。<br>利用我闲置的vps，云服务器。在b站，虎牙，斗鱼上面24小时不间断直播比obs方便太多<br>下面是我的直播方案，我选用的是白嫖的华为云centos系统的云服务器，cpu内存都不高，网络选用的是1M小水管。</p><p>准备工作：<br>下载直播推流工具: wget <a href="http://download.bytelang.cn/kplayer-latest-linux_amd64.tar.gz">http://download.bytelang.cn/kplayer-latest-linux_amd64.tar.gz</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 解压压缩包</span><br><span class="hljs-attribute">tar</span> zxvf kplayer-latest-linux_amd<span class="hljs-number">64</span>.tar.gz<br></code></pre></td></tr></table></figure><p>得到可执行文件</p><p>媒体资源准备:<br>自行下载想要直播的视频资源，我直播的是蜡笔小新。用迅雷下载完成蜡笔小新的全集后，上传到服务器中任意目录</p><p>开始直播：<br>编辑kplayer.yaml的配置文件(可查看官方文档)，在playlist里面添加进下载的媒体资源</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">version:</span> <span class="hljs-string">&quot;1.0&quot;</span><br><span class="hljs-symbol">player:</span><br><span class="hljs-symbol">  media:</span><br><span class="hljs-symbol">    list:</span><br>      - <span class="hljs-string">&quot;/root/lbxx/蜡笔小新1.mp4&quot;</span><br>      - <span class="hljs-string">&quot;/root/lbxx/蜡笔小新2.mp4&quot;</span><br><br><span class="hljs-symbol">  output:</span><br><span class="hljs-symbol">    type:</span> rtmp<br><span class="hljs-symbol">   path:</span> <span class="hljs-string">&quot;rtmp://*****&quot;</span><br></code></pre></td></tr></table></figure><p>下面的output path一般是直播平台提供的推流地址，工具将我们的媒体资源推送到直播服务器上面就开始正式直播了。</p><p>但是kplayer没有提供后台运行的功能，我借助的是tmux工具来进行后台运行的。如果有嫌麻烦的小伙伴可以 nohup 命令来进行后台推流.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nohup <span class="hljs-string">./kplayer</span><br></code></pre></td></tr></table></figure><p>打开直播间，就能完整看到蜡笔小新正在播放了</p><p>配置文件：<br>官方网站上面有很详细的配置文件说明，提供了插件。缓存，多个直播平台推流的功能。还是挺全面的，赞一个。这是网站地址 <a href="https://kplayer.bytelang.cn/">https://kplayer.bytelang.cn/</a></p><p>有空可以去看看我的直播间<a href="https://live.bilibili.com/21577989?visit_id=riw92t7hwzk">https://live.bilibili.com/21577989</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在现在主流的平台上面有很多直播电影，电视剧的房间。很多直播平台也有这方面影视的版权。大部分新人还是使用obs+potplayer来直播。这显然不符合技术宅的解决方法，需要开机个windows主机？技术宅：NO。&lt;br&gt;利用我闲置的vps，云服务器。在b站，虎牙，斗鱼上面24</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="VPS" scheme="https://blog.quickso.cn/tags/VPS/"/>
    
    <category term="服务器" scheme="https://blog.quickso.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>PHP空间虚拟主机不支持子目录的情况下借助.htaccess实现多个域名重定向到子目录实现单空间多站点</title>
    <link href="https://blog.quickso.cn/2021/02/20/PHP%E7%A9%BA%E9%97%B4%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E5%AD%90%E7%9B%AE%E5%BD%95%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%80%9F%E5%8A%A9-htaccess%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E5%AD%90%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%A9%BA%E9%97%B4%E5%A4%9A%E7%AB%99%E7%82%B9/"/>
    <id>https://blog.quickso.cn/2021/02/20/PHP%E7%A9%BA%E9%97%B4%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E5%AD%90%E7%9B%AE%E5%BD%95%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%80%9F%E5%8A%A9-htaccess%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E5%AD%90%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%A9%BA%E9%97%B4%E5%A4%9A%E7%AB%99%E7%82%B9/</id>
    <published>2021-02-20T08:28:57.000Z</published>
    <updated>2021-02-20T08:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>举例：<br>有多个域名：<code>site1.abc.com</code>，<code>site2.abc.com</code>，<code>site3.abc.com</code><br>分别在二级目录<code>site1.abc.com/</code>，<code>site2.abc.com/</code>，<code>site3.abc.com/</code></p><p>.htaccess的代码如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteEngine</span></span> <span class="hljs-literal">On</span><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">1</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_URI&#125;</span> !^/site<span class="hljs-number">1</span>.abc.com/<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-f<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-d<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(.*)$ /site<span class="hljs-number">1</span>.abc.com/$<span class="hljs-number">1</span><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">1</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(/)?$ site<span class="hljs-number">1</span>.abc.com/index.php<span class="hljs-meta"> [L]</span><br><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">2</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_URI&#125;</span> !^/site<span class="hljs-number">2</span>.abc.com/<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-f<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-d<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(.*)$ /site<span class="hljs-number">2</span>.abc.com/$<span class="hljs-number">1</span><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">2</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(/)?$ site<span class="hljs-number">2</span>.abc.com/index.php<span class="hljs-meta"> [L]</span><br><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">3</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_URI&#125;</span> !^/site<span class="hljs-number">3</span>.abc.com/<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-f<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;REQUEST_FILENAME&#125;</span> !-d<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(.*)$ /site<span class="hljs-number">3</span>.abc.com/$<span class="hljs-number">1</span><br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteCond</span></span> <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span> ^site<span class="hljs-number">3</span>.abc.com$<br><span class="hljs-attribute"><span class="hljs-nomarkup">RewriteRule</span></span> ^(/)?$ site<span class="hljs-number">3</span>.abc.com/index.php<span class="hljs-meta"> [L]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;举例：&lt;br&gt;有多个域名：&lt;code&gt;site1.abc.com&lt;/code&gt;，&lt;code&gt;site2.abc.com&lt;/code&gt;，&lt;code&gt;site3.abc.com&lt;/code&gt;&lt;br&gt;分别在二级目录&lt;code&gt;site1.abc.com/&lt;/code&gt;，&lt;code</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.quickso.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="虚拟主机" scheme="https://blog.quickso.cn/tags/%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
    
    <category term="虚拟空间" scheme="https://blog.quickso.cn/tags/%E8%99%9A%E6%8B%9F%E7%A9%BA%E9%97%B4/"/>
    
  </entry>
  
</feed>
